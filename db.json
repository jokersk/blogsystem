{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"source/images/github-octocat.png","path":"images/github-octocat.png","modified":0,"renderable":0},{"_id":"source/images/IMG_3336.JPG","path":"images/IMG_3336.JPG","modified":0,"renderable":0},{"_id":"themes/clean-blog/source/css/article.styl","path":"css/article.styl","modified":0,"renderable":1},{"_id":"themes/clean-blog/source/css/base.styl","path":"css/base.styl","modified":0,"renderable":1},{"_id":"themes/clean-blog/source/css/mixins.styl","path":"css/mixins.styl","modified":0,"renderable":1},{"_id":"themes/clean-blog/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/clean-blog/source/css/variables.styl","path":"css/variables.styl","modified":0,"renderable":1},{"_id":"themes/clean-blog/source/img/about-bg.jpg","path":"img/about-bg.jpg","modified":0,"renderable":1},{"_id":"themes/clean-blog/source/img/contact-bg.jpg","path":"img/contact-bg.jpg","modified":0,"renderable":1},{"_id":"themes/clean-blog/source/img/home-bg.jpg","path":"img/home-bg.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1495771892000},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1495771892000},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1495771892000},{"_id":"themes/landscape/README.md","hash":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1495771892000},{"_id":"themes/landscape/_config.yml","hash":"fb8c98a0f6ff9f962637f329c22699721854cd73","modified":1495771892000},{"_id":"themes/landscape/package.json","hash":"85358dc34311c6662e841584e206a4679183943f","modified":1495771892000},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1495771892000},{"_id":"themes/landscape/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1495771892000},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1495771892000},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1495771892000},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1495771892000},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1495771892000},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1495771892000},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1495771892000},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1495771892000},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1495771892000},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1495771892000},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1495771892000},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1495771892000},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1495771892000},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1495771892000},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1495771892000},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1495771892000},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"82a30f81c0e8ba4a8af17acd6cc99e93834e4d5e","modified":1495771892000},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"931aaaffa0910a48199388ede576184ff15793ee","modified":1495771892000},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1495771892000},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1495771892000},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1495771892000},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"4fe8853e864d192701c03e5cd3a5390287b90612","modified":1495771892000},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"c21ca56f419d01a9f49c27b6be9f4a98402b2aa3","modified":1495771892000},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1495771892000},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1495771892000},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1495771892000},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1495771892000},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1495771892000},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1495771892000},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1495771892000},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1495771892000},{"_id":"themes/landscape/source/css/_variables.styl","hash":"5e37a6571caf87149af83ac1cc0cdef99f117350","modified":1495771892000},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1495771892000},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1495771892000},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1495771892000},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1495771892000},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1495771892000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1495771892000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1495771892000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1495771892000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1495771892000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1495771892000},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1495771892000},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1495771892000},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1495771892000},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1495771892000},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1495771892000},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1495771892000},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1495771892000},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1495771892000},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1495771892000},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1495771892000},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1495771892000},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1495771892000},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1495771892000},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1495771892000},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1495771892000},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1495771892000},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1495771892000},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1495771892000},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1495771892000},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1495771892000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1495771892000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1495771892000},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1495771892000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1495771892000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1495771892000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1495771892000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1495771892000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1495771892000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1495771892000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1495771892000},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1495771892000},{"_id":"source/_posts/phaser.md","hash":"0c7d02bf7346b47e2e81038cbbaad69f3f1867c4","modified":1495772007000},{"_id":"source/_posts/ingapi.md","hash":"654e72b6ba209c4f7c60abb118c6f5aadfe172fd","modified":1495772007000},{"_id":"source/_posts/curl.md","hash":"7a11bb22f29dbf44f16a1a7fe381781f82f0da1e","modified":1495772007000},{"_id":"source/_posts/UnityMoveAndTurn.md","hash":"3428029b62c2bfa8c21c6be642f52bee366f0d18","modified":1495772007000},{"_id":"source/_posts/php-auth.md","hash":"abf91014adab1574498a682656f148b1fa7f2754","modified":1495772007000},{"_id":"source/_posts/phpexcel.md","hash":"bc21bfc8c352b0d33c6813b8b83896ba9661fe6a","modified":1495772007000},{"_id":"source/_posts/ssh.md","hash":"40cf3a5a60823ebbfdb0111766ad763990e770f1","modified":1495772007000},{"_id":"source/_posts/water.md","hash":"5e101ce227c537e08036dcecb75fb097baca4a7d","modified":1495772007000},{"_id":"source/_posts/wordpress.md","hash":"8b17285511730af208999704c5951ef2df3c040d","modified":1495772007000},{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1495772007000},{"_id":"source/_drafts/game.md","hash":"40814bd6e0b4935757dafdc530c6a9e47657c8ff","modified":1495772007000},{"_id":"source/_drafts/curl.md","hash":"36d59b8f0cf769b7194be7b10d7f14d9a009e3fe","modified":1495772007000},{"_id":"source/_drafts/UnityMoveAndTurn.md","hash":"f5ebc61d6a294bfe1310e9bb72ddcb8d28048493","modified":1495772007000},{"_id":"source/_drafts/paypal-api.md","hash":"87627bb26ee7668cb96e93cd784afeb48e53f1b9","modified":1495772007000},{"_id":"source/_drafts/php-server.md","hash":"cb7a4d71aaa9ce0968e500118a4f188dcf0eb037","modified":1495772007000},{"_id":"source/images/github-octocat.png","hash":"2b4e7bc3239a79746978992ffec9e6992f756029","modified":1495772007000},{"_id":"source/images/IMG_3336.JPG","hash":"ebf9031b1847881939664808be2c268a8080be3d","modified":1495772007000},{"_id":"public/2017/01/24/php-auth/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1495772184049},{"_id":"public/2017/01/18/wordpress/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1495772184049},{"_id":"public/2016/12/01/ssh/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1495772184049},{"_id":"public/2016/11/15/water/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1495772184049},{"_id":"public/2016/11/15/curl/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1495772184049},{"_id":"public/2016/11/10/phpexcel/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1495772184049},{"_id":"public/2016/11/04/phaser/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1495772184049},{"_id":"public/2016/10/24/UnityMoveAndTurn/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1495772184049},{"_id":"public/2016/10/20/ingapi/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1495772184050},{"_id":"public/archives/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1495772184050},{"_id":"public/archives/2016/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1495772184050},{"_id":"public/archives/2016/10/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1495772184050},{"_id":"public/archives/2016/11/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1495772184050},{"_id":"public/archives/2016/12/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1495772184050},{"_id":"public/archives/2017/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1495772184050},{"_id":"public/archives/2017/01/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1495772184050},{"_id":"public/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1495772184051},{"_id":"public/tags/unity-C/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1495772184051},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1495772184056},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1495772184056},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1495772184056},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1495772184056},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1495772184057},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1495772184057},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1495772184057},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1495772184057},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1495772184057},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1495772184057},{"_id":"public/images/github-octocat.png","hash":"2b4e7bc3239a79746978992ffec9e6992f756029","modified":1495772184057},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1495772184640},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1495772184644},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1495772184644},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1495772184644},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1495772184644},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1495772184644},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1495772184644},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1495772184644},{"_id":"public/css/style.css","hash":"c14837d4f8b1a8930360e23a709f7990151874a0","modified":1495772184644},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1495772184644},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1495772184644},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1495772184647},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1495772184647},{"_id":"public/images/IMG_3336.JPG","hash":"ebf9031b1847881939664808be2c268a8080be3d","modified":1495772184663},{"_id":"source/.DS_Store","hash":"495dc0d217dbc3e7cb0c015a4aa9af3e7011d37f","modified":1495772575000},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1495772647000},{"_id":"themes/clean-blog/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1495779784000},{"_id":"themes/clean-blog/.git/config","hash":"0037ed70f19e4933b19020ad514d8e9e049174f1","modified":1495779788000},{"_id":"themes/clean-blog/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1495779784000},{"_id":"themes/clean-blog/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1495779784000},{"_id":"themes/clean-blog/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1495779784000},{"_id":"themes/clean-blog/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1495779784000},{"_id":"themes/clean-blog/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1495779784000},{"_id":"themes/clean-blog/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1495779784000},{"_id":"themes/clean-blog/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1495779784000},{"_id":"themes/clean-blog/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1495779784000},{"_id":"themes/clean-blog/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1495779784000},{"_id":"themes/clean-blog/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1495779784000},{"_id":"themes/clean-blog/.git/info/exclude","hash":"bb5a85730dcf100facee799c05cc4f6affec0745","modified":1495779784000},{"_id":"themes/clean-blog/.git/objects/pack/pack-49d5be7bde135e26f08c533e371ed8c17f3e8270.idx","hash":"cd4ba9416f04bfa028a656071f9833e60905e37e","modified":1495779788000},{"_id":"themes/clean-blog/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1495779788000},{"_id":"themes/clean-blog/.git/logs/HEAD","hash":"b1ec35b1377fab18bf901ae2d54ffa2e16d8cdbe","modified":1495779788000},{"_id":"themes/clean-blog/.git/logs/refs/remotes/origin/HEAD","hash":"b1ec35b1377fab18bf901ae2d54ffa2e16d8cdbe","modified":1495779788000},{"_id":"themes/clean-blog/.git/logs/refs/heads/master","hash":"b1ec35b1377fab18bf901ae2d54ffa2e16d8cdbe","modified":1495779788000},{"_id":"themes/clean-blog/languages/de.yml","hash":"424a9c1e6ab69334d7873f6574da02ca960aa572","modified":1495779788000},{"_id":"themes/clean-blog/languages/default.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1495779788000},{"_id":"themes/clean-blog/languages/en.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1495779788000},{"_id":"themes/clean-blog/languages/es.yml","hash":"cb4eeca0ed3768a77e0cd216300f2b2549628b1b","modified":1495779788000},{"_id":"themes/clean-blog/languages/pl.yml","hash":"de7eb5850ae65ba7638e907c805fea90617a988c","modified":1495779788000},{"_id":"themes/clean-blog/languages/no.yml","hash":"8ca475a3b4f8efe6603030f0013aae39668230e1","modified":1495779788000},{"_id":"themes/clean-blog/languages/fr.yml","hash":"e9e6f7cb362ebb7997f11027498a2748fe3bac95","modified":1495779788000},{"_id":"themes/clean-blog/languages/pt.yml","hash":"1d0c3689eb32fe13f37f8f6f303af7624ebfbaf0","modified":1495779788000},{"_id":"themes/clean-blog/languages/ru.yml","hash":"42df7afeb7a35dc46d272b7f4fb880a9d9ebcaa5","modified":1495779788000},{"_id":"themes/clean-blog/languages/zh-CN.yml","hash":"7bfcb0b8e97d7e5edcfca8ab26d55d9da2573c1c","modified":1495779788000},{"_id":"themes/clean-blog/languages/zh-TW.yml","hash":"9acac6cc4f8002c3fa53ff69fb8cf66c915bd016","modified":1495779788000},{"_id":"themes/clean-blog/layout/archive.ejs","hash":"f2ef73afc3d275333329bb30b9369b82e119da76","modified":1495779788000},{"_id":"themes/clean-blog/layout/index.ejs","hash":"87995288ca6f95a04add641727aedd3f6afa55eb","modified":1495779788000},{"_id":"themes/clean-blog/layout/layout.ejs","hash":"da2f9018047924ddaf376aee5996c7ddc06cebc1","modified":1495779788000},{"_id":"themes/clean-blog/layout/page.ejs","hash":"591af587e1aae962950de7e79bd25c1f060c69ac","modified":1495779788000},{"_id":"themes/clean-blog/layout/post.ejs","hash":"38382e9bbeb6b8d2eafbd53fff2984111f524c1a","modified":1495779788000},{"_id":"themes/clean-blog/layout/_partial/after-footer.ejs","hash":"80970a6cfbf9b1abe0c472636b321a9be08fdc43","modified":1495779788000},{"_id":"themes/clean-blog/layout/_partial/article-archive.ejs","hash":"3d8d98c6545b8332a6d6ed4f8b00327df03ea945","modified":1495779788000},{"_id":"themes/clean-blog/layout/_partial/article-categories.ejs","hash":"5a0bf5a20f670621d8013c9b9d7976b45c8aa80f","modified":1495779788000},{"_id":"themes/clean-blog/layout/_partial/article-index.ejs","hash":"e433df4e245e2d4c628052c6e59966563542d94d","modified":1495779788000},{"_id":"themes/clean-blog/layout/_partial/article-full.ejs","hash":"0e7aa9da47f29b2312d9d3165c067576ebca77cf","modified":1495779788000},{"_id":"themes/clean-blog/layout/_partial/comments.ejs","hash":"3fedb75436439d1d6979b7e4d20d48a593e12be4","modified":1495779788000},{"_id":"themes/clean-blog/layout/_partial/article-tags.ejs","hash":"6136434be09056c1466149cecb3cc2e80d107999","modified":1495779788000},{"_id":"themes/clean-blog/layout/_partial/footer.ejs","hash":"d252fb1a41890e6481bb054f9cc4ceec3c0b0ed9","modified":1495779788000},{"_id":"themes/clean-blog/layout/_partial/gallery.ejs","hash":"21e4f28909f4a79ff7d9f10bdfef6a8cb11632bf","modified":1495779788000},{"_id":"themes/clean-blog/layout/_partial/google-analytics.ejs","hash":"4e6e8de9becea5a1636a4dcadcf7a10c06e2426e","modified":1495779788000},{"_id":"themes/clean-blog/layout/_partial/head.ejs","hash":"3a7eb32f2cc540746c9e11010a4513b832743d1e","modified":1495779788000},{"_id":"themes/clean-blog/layout/_partial/menu.ejs","hash":"ba299316400499e9ede154e9627cafb7ce411888","modified":1495779788000},{"_id":"themes/clean-blog/layout/_partial/pagination.ejs","hash":"557d6bb069a1d48af49ae912994653f44b32a570","modified":1495779788000},{"_id":"themes/clean-blog/layout/_partial/tag-category-index.ejs","hash":"10cdc1b7866999c714a666557c150d2c79c1fba9","modified":1495779788000},{"_id":"themes/clean-blog/source/css/article.styl","hash":"f5294d7a3d6127fcb287de3ff0c12aebb1766c7b","modified":1495779788000},{"_id":"themes/clean-blog/source/css/base.styl","hash":"f0a6fcf58fe515e1359acde0ed34081f580ec7a3","modified":1495779788000},{"_id":"themes/clean-blog/source/css/mixins.styl","hash":"892f55e8a71f2e23a52e48e217dad3303bbad913","modified":1495779788000},{"_id":"themes/clean-blog/source/css/style.styl","hash":"c40dc495a41007d21c59f342ee42b2d31d7b5ff4","modified":1495779788000},{"_id":"themes/clean-blog/source/css/variables.styl","hash":"cd82df5ca8dfbcfec12d833f01adfac00878e835","modified":1495779788000},{"_id":"themes/clean-blog/source/img/about-bg.jpg","hash":"d39126a6456f2bac0169d1779304725f179c9900","modified":1495779788000},{"_id":"themes/clean-blog/source/img/home-bg.jpg","hash":"990f6f9dd0ecb5348bfcc47305553d58c0d8f326","modified":1495779788000},{"_id":"themes/clean-blog/source/img/contact-bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1495779788000},{"_id":"themes/clean-blog/.git/objects/pack/pack-49d5be7bde135e26f08c533e371ed8c17f3e8270.pack","hash":"ff484c583cdc0fabfa22b525585a1fe6db4a0bd5","modified":1495779788000},{"_id":"themes/clean-blog/LICENSE","hash":"8726b416df4f067cff579e859f05c4b594b8be09","modified":1495779788000},{"_id":"themes/clean-blog/README.md","hash":"861dd2f959ab75d121226f4f3e2f61f4bc95fddb","modified":1495779788000},{"_id":"themes/clean-blog/_config.yml","hash":"4a37c611139118509aaba12f0bb1380457d28473","modified":1495779788000},{"_id":"themes/clean-blog/.git/index","hash":"a56212572f34f0a40e537bc85ac42357ea3850b6","modified":1495779788000},{"_id":"themes/clean-blog/.git/packed-refs","hash":"78749f2f1de403b00552d862f076d37586b9b819","modified":1495779788000},{"_id":"themes/clean-blog/.git/refs/heads/master","hash":"0f3b4e362de29ccd7fa4b5983e9a0ea546623577","modified":1495779788000}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"phaser","date":"2016-11-04T02:43:43.000Z","_content":"\n遊戲框架\n\n\t\tvar game;\n\n\n\t\tvar gameOptions = {\n\t\t\tgameWidth: 1000, \n\t\t\tgameHeight: 800\n\t\t\t\n\t\t}\n\n\t\twindow.onload = function() {\t\n\t\t\t game = new Phaser.Game(gameOptions.gameWidth, gameOptions.gameHeight);\n\t\t     game.state.add(\"TheGame\", TheGame);\n\t\t     game.state.start(\"TheGame\");\n\t\t}\n\n\t\tvar TheGame = function(){};\n\n\t\tTheGame.prototype = {\n\t\t     \n\t\t     \n\t\t     preload: function(){\n\t\t          // game.load.spritesheet(\"tiles\", \"titlePath\", tilesSize, tilesSize);\n\t\t          // game.load.image(\"player\", \"playerPath\"); \n\t\t     },\n\t\t     \n\t\t     \n\t\t  \tcreate: function(){\n\t\t        game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\n\t\t\t\tgame.scale.pageAlignHorizontally = true;\n\t\t\t\tgame.scale.pageAlignVertically = true; \n\t\t          \n\t\t  \t},\n\n\t\t  \tupdate:function(){\n\n\t\t  \t}\n     \n\t\t}\n\n","source":"_posts/phaser.md","raw":"---\ntitle: phaser\ndate: 2016-11-04 10:43:43\ntags:\n---\n\n遊戲框架\n\n\t\tvar game;\n\n\n\t\tvar gameOptions = {\n\t\t\tgameWidth: 1000, \n\t\t\tgameHeight: 800\n\t\t\t\n\t\t}\n\n\t\twindow.onload = function() {\t\n\t\t\t game = new Phaser.Game(gameOptions.gameWidth, gameOptions.gameHeight);\n\t\t     game.state.add(\"TheGame\", TheGame);\n\t\t     game.state.start(\"TheGame\");\n\t\t}\n\n\t\tvar TheGame = function(){};\n\n\t\tTheGame.prototype = {\n\t\t     \n\t\t     \n\t\t     preload: function(){\n\t\t          // game.load.spritesheet(\"tiles\", \"titlePath\", tilesSize, tilesSize);\n\t\t          // game.load.image(\"player\", \"playerPath\"); \n\t\t     },\n\t\t     \n\t\t     \n\t\t  \tcreate: function(){\n\t\t        game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\n\t\t\t\tgame.scale.pageAlignHorizontally = true;\n\t\t\t\tgame.scale.pageAlignVertically = true; \n\t\t          \n\t\t  \t},\n\n\t\t  \tupdate:function(){\n\n\t\t  \t}\n     \n\t\t}\n\n","slug":"phaser","published":1,"updated":"2017-05-26T04:13:27.000Z","_id":"cj35c1udr0001af7xo3a81q4o","comments":1,"layout":"post","photos":[],"link":"","content":"<p>遊戲框架</p>\n<pre><code>var game;\n\n\nvar gameOptions = {\n    gameWidth: 1000, \n    gameHeight: 800\n\n}\n\nwindow.onload = function() {    \n     game = new Phaser.Game(gameOptions.gameWidth, gameOptions.gameHeight);\n     game.state.add(&quot;TheGame&quot;, TheGame);\n     game.state.start(&quot;TheGame&quot;);\n}\n\nvar TheGame = function(){};\n\nTheGame.prototype = {\n\n\n     preload: function(){\n          // game.load.spritesheet(&quot;tiles&quot;, &quot;titlePath&quot;, tilesSize, tilesSize);\n          // game.load.image(&quot;player&quot;, &quot;playerPath&quot;); \n     },\n\n\n      create: function(){\n        game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\n        game.scale.pageAlignHorizontally = true;\n        game.scale.pageAlignVertically = true; \n\n      },\n\n      update:function(){\n\n      }\n\n}\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>遊戲框架</p>\n<pre><code>var game;\n\n\nvar gameOptions = {\n    gameWidth: 1000, \n    gameHeight: 800\n\n}\n\nwindow.onload = function() {    \n     game = new Phaser.Game(gameOptions.gameWidth, gameOptions.gameHeight);\n     game.state.add(&quot;TheGame&quot;, TheGame);\n     game.state.start(&quot;TheGame&quot;);\n}\n\nvar TheGame = function(){};\n\nTheGame.prototype = {\n\n\n     preload: function(){\n          // game.load.spritesheet(&quot;tiles&quot;, &quot;titlePath&quot;, tilesSize, tilesSize);\n          // game.load.image(&quot;player&quot;, &quot;playerPath&quot;); \n     },\n\n\n      create: function(){\n        game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\n        game.scale.pageAlignHorizontally = true;\n        game.scale.pageAlignVertically = true; \n\n      },\n\n      update:function(){\n\n      }\n\n}\n</code></pre>"},{"title":"Instagram api 教學","date":"2016-10-20T10:24:50.000Z","_content":"\n\n\t\t$ig_user_name = \"this ig user name\";\n\t\t$url  = \"https://www.instagram.com/\".$ig_user_name.\"/media/\";\n\t\t\n\t\t$curl_connection = curl_init($url);\n\t\t   curl_setopt($curl_connection, CURLOPT_CONNECTTIMEOUT, 30);\n\t\t   curl_setopt($curl_connection, CURLOPT_RETURNTRANSFER, true);\n\t\t   curl_setopt($curl_connection, CURLOPT_SSL_VERIFYPEER, false);\n\n\t\t  \n\t\t   $data = json_decode(curl_exec($curl_connection), true);\n\t\t   curl_close($curl_connection);\n\t\tvar_dump($data);\n\n","source":"_posts/ingapi.md","raw":"---\ntitle: Instagram api 教學\ndate: 2016-10-20 18:24:50\ntags:\n---\n\n\n\t\t$ig_user_name = \"this ig user name\";\n\t\t$url  = \"https://www.instagram.com/\".$ig_user_name.\"/media/\";\n\t\t\n\t\t$curl_connection = curl_init($url);\n\t\t   curl_setopt($curl_connection, CURLOPT_CONNECTTIMEOUT, 30);\n\t\t   curl_setopt($curl_connection, CURLOPT_RETURNTRANSFER, true);\n\t\t   curl_setopt($curl_connection, CURLOPT_SSL_VERIFYPEER, false);\n\n\t\t  \n\t\t   $data = json_decode(curl_exec($curl_connection), true);\n\t\t   curl_close($curl_connection);\n\t\tvar_dump($data);\n\n","slug":"ingapi","published":1,"updated":"2017-05-26T04:13:27.000Z","_id":"cj35c1udz0002af7xptbvy8tl","comments":1,"layout":"post","photos":[],"link":"","content":"<pre><code>$ig_user_name = &quot;this ig user name&quot;;\n$url  = &quot;https://www.instagram.com/&quot;.$ig_user_name.&quot;/media/&quot;;\n\n$curl_connection = curl_init($url);\n   curl_setopt($curl_connection, CURLOPT_CONNECTTIMEOUT, 30);\n   curl_setopt($curl_connection, CURLOPT_RETURNTRANSFER, true);\n   curl_setopt($curl_connection, CURLOPT_SSL_VERIFYPEER, false);\n\n\n   $data = json_decode(curl_exec($curl_connection), true);\n   curl_close($curl_connection);\nvar_dump($data);\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<pre><code>$ig_user_name = &quot;this ig user name&quot;;\n$url  = &quot;https://www.instagram.com/&quot;.$ig_user_name.&quot;/media/&quot;;\n\n$curl_connection = curl_init($url);\n   curl_setopt($curl_connection, CURLOPT_CONNECTTIMEOUT, 30);\n   curl_setopt($curl_connection, CURLOPT_RETURNTRANSFER, true);\n   curl_setopt($curl_connection, CURLOPT_SSL_VERIFYPEER, false);\n\n\n   $data = json_decode(curl_exec($curl_connection), true);\n   curl_close($curl_connection);\nvar_dump($data);\n</code></pre>"},{"title":"curl PHP","date":"2016-11-15T04:34:33.000Z","_content":"\n\ncurl 是做不了跳板的，只系取得url裡面的內容。適合做api \n可以用來用get 和 post ， 把CURLOPT_POST設置成true 就是post\n\n\n\t\t$ch = curl_init();\n\t\tcurl_setopt($ch, CURLOPT_URL, \"http://SomeDomain/SamplePath\");\n\t\tcurl_setopt($ch, CURLOPT_POST, true); // 啟用POST\n\t\tcurl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query( array( \"a\"=>\"123\", \"b\"=>\"321\") )); \n\t\tcurl_setopt($ch, CURLOPT_SSLVERSION, 6);\n\t\t$result = curl_exec($ch);\n\t\tcurl_close($ch);\n\n裡面的\n\n\t\tcurl_setopt($ch, CURLOPT_SSLVERSION, 6);\n\n不一定要用到，不過有一次在一個server上無論如何也用不到curl,然後折騰半天,加了這個就成功了。\n\n如果加入\n\t\t\n\t\tcurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\n就會將結果存起來，不過直接輸出\n\n\n\n","source":"_posts/curl.md","raw":"---\ntitle: curl PHP\ndate: 2016-11-15 12:34:33\ntags:\n---\n\n\ncurl 是做不了跳板的，只系取得url裡面的內容。適合做api \n可以用來用get 和 post ， 把CURLOPT_POST設置成true 就是post\n\n\n\t\t$ch = curl_init();\n\t\tcurl_setopt($ch, CURLOPT_URL, \"http://SomeDomain/SamplePath\");\n\t\tcurl_setopt($ch, CURLOPT_POST, true); // 啟用POST\n\t\tcurl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query( array( \"a\"=>\"123\", \"b\"=>\"321\") )); \n\t\tcurl_setopt($ch, CURLOPT_SSLVERSION, 6);\n\t\t$result = curl_exec($ch);\n\t\tcurl_close($ch);\n\n裡面的\n\n\t\tcurl_setopt($ch, CURLOPT_SSLVERSION, 6);\n\n不一定要用到，不過有一次在一個server上無論如何也用不到curl,然後折騰半天,加了這個就成功了。\n\n如果加入\n\t\t\n\t\tcurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\n就會將結果存起來，不過直接輸出\n\n\n\n","slug":"curl","published":1,"updated":"2017-05-26T04:13:27.000Z","_id":"cj35c1ue30003af7xpiefv9gp","comments":1,"layout":"post","photos":[],"link":"","content":"<p>curl 是做不了跳板的，只系取得url裡面的內容。適合做api<br>可以用來用get 和 post ， 把CURLOPT_POST設置成true 就是post</p>\n<pre><code>$ch = curl_init();\ncurl_setopt($ch, CURLOPT_URL, &quot;http://SomeDomain/SamplePath&quot;);\ncurl_setopt($ch, CURLOPT_POST, true); // 啟用POST\ncurl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query( array( &quot;a&quot;=&gt;&quot;123&quot;, &quot;b&quot;=&gt;&quot;321&quot;) )); \ncurl_setopt($ch, CURLOPT_SSLVERSION, 6);\n$result = curl_exec($ch);\ncurl_close($ch);\n</code></pre><p>裡面的</p>\n<pre><code>curl_setopt($ch, CURLOPT_SSLVERSION, 6);\n</code></pre><p>不一定要用到，不過有一次在一個server上無論如何也用不到curl,然後折騰半天,加了這個就成功了。</p>\n<p>如果加入</p>\n<pre><code>curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n</code></pre><p>就會將結果存起來，不過直接輸出</p>\n","site":{"data":{}},"excerpt":"","more":"<p>curl 是做不了跳板的，只系取得url裡面的內容。適合做api<br>可以用來用get 和 post ， 把CURLOPT_POST設置成true 就是post</p>\n<pre><code>$ch = curl_init();\ncurl_setopt($ch, CURLOPT_URL, &quot;http://SomeDomain/SamplePath&quot;);\ncurl_setopt($ch, CURLOPT_POST, true); // 啟用POST\ncurl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query( array( &quot;a&quot;=&gt;&quot;123&quot;, &quot;b&quot;=&gt;&quot;321&quot;) )); \ncurl_setopt($ch, CURLOPT_SSLVERSION, 6);\n$result = curl_exec($ch);\ncurl_close($ch);\n</code></pre><p>裡面的</p>\n<pre><code>curl_setopt($ch, CURLOPT_SSLVERSION, 6);\n</code></pre><p>不一定要用到，不過有一次在一個server上無論如何也用不到curl,然後折騰半天,加了這個就成功了。</p>\n<p>如果加入</p>\n<pre><code>curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n</code></pre><p>就會將結果存起來，不過直接輸出</p>\n"},{"title":"Unity Move and Turn","date":"2016-10-24T09:55:55.000Z","_content":"\n\n在這裡記錄一下unity對一個rigidbody最簡單的move 跟 turn \n\n### Move \nmove 就是移動，這裡用的是 MovePosition， 官網是這樣寫的 \n\t\t\n\t\tpublic void MovePosition(Vector3 position);\n\nVector3是一個3D 的點，\n按照我的理解，就是直接給這個rigidbody一個新的位置，然後簡單粗暴地移動到新的位置，沒有考慮重力，摩擦摩擦等因素。\n舉一個栗子： \n\t\t\n\t\tfloat v = Input.GetAxis (\"Vertical\");\n\t\tVector3 movement = transform.forward * v * Speed * Time.deltaTime;\n        rigidbody.MovePosition(rigidbody.position + movement);\n\n這樣，這個rigidbody就會不停向前走\n\n\n### Turn\nturn  就是旋轉， 比移動要複雜一點點。 這裡用的是 MoveRotation， 同樣，官網是這樣寫的 \n\t\t\n\t\tpublic void MoveRotation(Quaternion rot);\n\n注意，這裡的參數系Quaternion, 中文是四元数（握草，什麼鬼）。\n要搞到這個Quaternion，我們要用unity 的 Quaternion.Euler 方法 \n\t\t\n\t\tQuaternion Euler(float x, float y, float z);\n\n##### Returns a rotation that rotates z degrees around the z axis, \n##### x degrees around the x axis, and y degrees around the y axis (in that order).\n這個function是傳入x,y,z三個 float ，輸出 Quaternion , 有了這個Quaternion之後就可以用來旋轉\n這個rigidbody 了，下面是例子：  \n\t\t\n\t\t\n\t\tfloat turn = Input.GetAxis (\"Horizontal\") * Speed * Time.deltaTime;\n\n\t\tQuaternion turnRotation = Quaternion.Euler (0f, turn, 0f);\n\n        rigidbody.MoveRotation (rigidbody.rotation * turnRotation);\n\n其實也可以直接這樣\n\n\t\trigidbody.rotation = turnRotation;\n\n因為rigidbody.rotation 本身就是一個 Quaternion。 \n\n\n如果想一個rigidbody 總是看著另一個rigidbody 就可以用 Quaternion.LookRotation(Vector3 forward, Vector3 upwards = Vector3.up)\n方法計算出一個Quaternion \n\n\tpublic static Quaternion LookRotation(Vector3 forward, Vector3 upwards = Vector3.up);\n\n或者更直接用 Transform.LookAt \n\t\n\tpublic void LookAt(Transform target, Vector3 worldUp = Vector3.up);\n\n\tpublic Transform target;\n    \n    void Update() {\n    \t// Rotate the camera every frame so it keeps looking at the target \n        transform.LookAt(target);\n    }\n\n\n上面就是對於一個 rigidbody的移動和旋轉的方法。\n\n\n### 這裡再稍微說一下 MovePosition 跟 Rigidbody.AddForce() 的區別\nMovePosition 是提供一個新的位置，讓rigidbody 從舊的位置去到新的位置，可以實現瞬移，跟物理學沒有半點關係 （瞬移根本就違反物理學， ps:這裡是2016年的物理學）\naddforce 是加一個力給這個rigidbody 讓它移動，像推它，踢它甚至爆炸的力，如果摩擦力為0，根據物理學，物體會一直運動， addforce 不能實現瞬移。 \n\n\n","source":"_posts/UnityMoveAndTurn.md","raw":"---\ntitle: Unity Move and Turn\ntags: 'unity, C#'\ndate: 2016-10-24 17:55:55\n---\n\n\n在這裡記錄一下unity對一個rigidbody最簡單的move 跟 turn \n\n### Move \nmove 就是移動，這裡用的是 MovePosition， 官網是這樣寫的 \n\t\t\n\t\tpublic void MovePosition(Vector3 position);\n\nVector3是一個3D 的點，\n按照我的理解，就是直接給這個rigidbody一個新的位置，然後簡單粗暴地移動到新的位置，沒有考慮重力，摩擦摩擦等因素。\n舉一個栗子： \n\t\t\n\t\tfloat v = Input.GetAxis (\"Vertical\");\n\t\tVector3 movement = transform.forward * v * Speed * Time.deltaTime;\n        rigidbody.MovePosition(rigidbody.position + movement);\n\n這樣，這個rigidbody就會不停向前走\n\n\n### Turn\nturn  就是旋轉， 比移動要複雜一點點。 這裡用的是 MoveRotation， 同樣，官網是這樣寫的 \n\t\t\n\t\tpublic void MoveRotation(Quaternion rot);\n\n注意，這裡的參數系Quaternion, 中文是四元数（握草，什麼鬼）。\n要搞到這個Quaternion，我們要用unity 的 Quaternion.Euler 方法 \n\t\t\n\t\tQuaternion Euler(float x, float y, float z);\n\n##### Returns a rotation that rotates z degrees around the z axis, \n##### x degrees around the x axis, and y degrees around the y axis (in that order).\n這個function是傳入x,y,z三個 float ，輸出 Quaternion , 有了這個Quaternion之後就可以用來旋轉\n這個rigidbody 了，下面是例子：  \n\t\t\n\t\t\n\t\tfloat turn = Input.GetAxis (\"Horizontal\") * Speed * Time.deltaTime;\n\n\t\tQuaternion turnRotation = Quaternion.Euler (0f, turn, 0f);\n\n        rigidbody.MoveRotation (rigidbody.rotation * turnRotation);\n\n其實也可以直接這樣\n\n\t\trigidbody.rotation = turnRotation;\n\n因為rigidbody.rotation 本身就是一個 Quaternion。 \n\n\n如果想一個rigidbody 總是看著另一個rigidbody 就可以用 Quaternion.LookRotation(Vector3 forward, Vector3 upwards = Vector3.up)\n方法計算出一個Quaternion \n\n\tpublic static Quaternion LookRotation(Vector3 forward, Vector3 upwards = Vector3.up);\n\n或者更直接用 Transform.LookAt \n\t\n\tpublic void LookAt(Transform target, Vector3 worldUp = Vector3.up);\n\n\tpublic Transform target;\n    \n    void Update() {\n    \t// Rotate the camera every frame so it keeps looking at the target \n        transform.LookAt(target);\n    }\n\n\n上面就是對於一個 rigidbody的移動和旋轉的方法。\n\n\n### 這裡再稍微說一下 MovePosition 跟 Rigidbody.AddForce() 的區別\nMovePosition 是提供一個新的位置，讓rigidbody 從舊的位置去到新的位置，可以實現瞬移，跟物理學沒有半點關係 （瞬移根本就違反物理學， ps:這裡是2016年的物理學）\naddforce 是加一個力給這個rigidbody 讓它移動，像推它，踢它甚至爆炸的力，如果摩擦力為0，根據物理學，物體會一直運動， addforce 不能實現瞬移。 \n\n\n","slug":"UnityMoveAndTurn","published":1,"updated":"2017-05-26T04:13:27.000Z","_id":"cj35c1ue50004af7xw347unuq","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在這裡記錄一下unity對一個rigidbody最簡單的move 跟 turn </p>\n<h3 id=\"Move\"><a href=\"#Move\" class=\"headerlink\" title=\"Move\"></a>Move</h3><p>move 就是移動，這裡用的是 MovePosition， 官網是這樣寫的 </p>\n<pre><code>public void MovePosition(Vector3 position);\n</code></pre><p>Vector3是一個3D 的點，<br>按照我的理解，就是直接給這個rigidbody一個新的位置，然後簡單粗暴地移動到新的位置，沒有考慮重力，摩擦摩擦等因素。<br>舉一個栗子： </p>\n<pre><code>float v = Input.GetAxis (&quot;Vertical&quot;);\nVector3 movement = transform.forward * v * Speed * Time.deltaTime;\nrigidbody.MovePosition(rigidbody.position + movement);\n</code></pre><p>這樣，這個rigidbody就會不停向前走</p>\n<h3 id=\"Turn\"><a href=\"#Turn\" class=\"headerlink\" title=\"Turn\"></a>Turn</h3><p>turn  就是旋轉， 比移動要複雜一點點。 這裡用的是 MoveRotation， 同樣，官網是這樣寫的 </p>\n<pre><code>public void MoveRotation(Quaternion rot);\n</code></pre><p>注意，這裡的參數系Quaternion, 中文是四元数（握草，什麼鬼）。<br>要搞到這個Quaternion，我們要用unity 的 Quaternion.Euler 方法 </p>\n<pre><code>Quaternion Euler(float x, float y, float z);\n</code></pre><h5 id=\"Returns-a-rotation-that-rotates-z-degrees-around-the-z-axis\"><a href=\"#Returns-a-rotation-that-rotates-z-degrees-around-the-z-axis\" class=\"headerlink\" title=\"Returns a rotation that rotates z degrees around the z axis,\"></a>Returns a rotation that rotates z degrees around the z axis,</h5><h5 id=\"x-degrees-around-the-x-axis-and-y-degrees-around-the-y-axis-in-that-order\"><a href=\"#x-degrees-around-the-x-axis-and-y-degrees-around-the-y-axis-in-that-order\" class=\"headerlink\" title=\"x degrees around the x axis, and y degrees around the y axis (in that order).\"></a>x degrees around the x axis, and y degrees around the y axis (in that order).</h5><p>這個function是傳入x,y,z三個 float ，輸出 Quaternion , 有了這個Quaternion之後就可以用來旋轉<br>這個rigidbody 了，下面是例子：  </p>\n<pre><code>float turn = Input.GetAxis (&quot;Horizontal&quot;) * Speed * Time.deltaTime;\n\nQuaternion turnRotation = Quaternion.Euler (0f, turn, 0f);\n\nrigidbody.MoveRotation (rigidbody.rotation * turnRotation);\n</code></pre><p>其實也可以直接這樣</p>\n<pre><code>rigidbody.rotation = turnRotation;\n</code></pre><p>因為rigidbody.rotation 本身就是一個 Quaternion。 </p>\n<p>如果想一個rigidbody 總是看著另一個rigidbody 就可以用 Quaternion.LookRotation(Vector3 forward, Vector3 upwards = Vector3.up)<br>方法計算出一個Quaternion </p>\n<pre><code>public static Quaternion LookRotation(Vector3 forward, Vector3 upwards = Vector3.up);\n</code></pre><p>或者更直接用 Transform.LookAt </p>\n<pre><code>public void LookAt(Transform target, Vector3 worldUp = Vector3.up);\n\npublic Transform target;\n\nvoid Update() {\n    // Rotate the camera every frame so it keeps looking at the target \n    transform.LookAt(target);\n}\n</code></pre><p>上面就是對於一個 rigidbody的移動和旋轉的方法。</p>\n<h3 id=\"這裡再稍微說一下-MovePosition-跟-Rigidbody-AddForce-的區別\"><a href=\"#這裡再稍微說一下-MovePosition-跟-Rigidbody-AddForce-的區別\" class=\"headerlink\" title=\"這裡再稍微說一下 MovePosition 跟 Rigidbody.AddForce() 的區別\"></a>這裡再稍微說一下 MovePosition 跟 Rigidbody.AddForce() 的區別</h3><p>MovePosition 是提供一個新的位置，讓rigidbody 從舊的位置去到新的位置，可以實現瞬移，跟物理學沒有半點關係 （瞬移根本就違反物理學， ps:這裡是2016年的物理學）<br>addforce 是加一個力給這個rigidbody 讓它移動，像推它，踢它甚至爆炸的力，如果摩擦力為0，根據物理學，物體會一直運動， addforce 不能實現瞬移。 </p>\n","site":{"data":{}},"excerpt":"","more":"<p>在這裡記錄一下unity對一個rigidbody最簡單的move 跟 turn </p>\n<h3 id=\"Move\"><a href=\"#Move\" class=\"headerlink\" title=\"Move\"></a>Move</h3><p>move 就是移動，這裡用的是 MovePosition， 官網是這樣寫的 </p>\n<pre><code>public void MovePosition(Vector3 position);\n</code></pre><p>Vector3是一個3D 的點，<br>按照我的理解，就是直接給這個rigidbody一個新的位置，然後簡單粗暴地移動到新的位置，沒有考慮重力，摩擦摩擦等因素。<br>舉一個栗子： </p>\n<pre><code>float v = Input.GetAxis (&quot;Vertical&quot;);\nVector3 movement = transform.forward * v * Speed * Time.deltaTime;\nrigidbody.MovePosition(rigidbody.position + movement);\n</code></pre><p>這樣，這個rigidbody就會不停向前走</p>\n<h3 id=\"Turn\"><a href=\"#Turn\" class=\"headerlink\" title=\"Turn\"></a>Turn</h3><p>turn  就是旋轉， 比移動要複雜一點點。 這裡用的是 MoveRotation， 同樣，官網是這樣寫的 </p>\n<pre><code>public void MoveRotation(Quaternion rot);\n</code></pre><p>注意，這裡的參數系Quaternion, 中文是四元数（握草，什麼鬼）。<br>要搞到這個Quaternion，我們要用unity 的 Quaternion.Euler 方法 </p>\n<pre><code>Quaternion Euler(float x, float y, float z);\n</code></pre><h5 id=\"Returns-a-rotation-that-rotates-z-degrees-around-the-z-axis\"><a href=\"#Returns-a-rotation-that-rotates-z-degrees-around-the-z-axis\" class=\"headerlink\" title=\"Returns a rotation that rotates z degrees around the z axis,\"></a>Returns a rotation that rotates z degrees around the z axis,</h5><h5 id=\"x-degrees-around-the-x-axis-and-y-degrees-around-the-y-axis-in-that-order\"><a href=\"#x-degrees-around-the-x-axis-and-y-degrees-around-the-y-axis-in-that-order\" class=\"headerlink\" title=\"x degrees around the x axis, and y degrees around the y axis (in that order).\"></a>x degrees around the x axis, and y degrees around the y axis (in that order).</h5><p>這個function是傳入x,y,z三個 float ，輸出 Quaternion , 有了這個Quaternion之後就可以用來旋轉<br>這個rigidbody 了，下面是例子：  </p>\n<pre><code>float turn = Input.GetAxis (&quot;Horizontal&quot;) * Speed * Time.deltaTime;\n\nQuaternion turnRotation = Quaternion.Euler (0f, turn, 0f);\n\nrigidbody.MoveRotation (rigidbody.rotation * turnRotation);\n</code></pre><p>其實也可以直接這樣</p>\n<pre><code>rigidbody.rotation = turnRotation;\n</code></pre><p>因為rigidbody.rotation 本身就是一個 Quaternion。 </p>\n<p>如果想一個rigidbody 總是看著另一個rigidbody 就可以用 Quaternion.LookRotation(Vector3 forward, Vector3 upwards = Vector3.up)<br>方法計算出一個Quaternion </p>\n<pre><code>public static Quaternion LookRotation(Vector3 forward, Vector3 upwards = Vector3.up);\n</code></pre><p>或者更直接用 Transform.LookAt </p>\n<pre><code>public void LookAt(Transform target, Vector3 worldUp = Vector3.up);\n\npublic Transform target;\n\nvoid Update() {\n    // Rotate the camera every frame so it keeps looking at the target \n    transform.LookAt(target);\n}\n</code></pre><p>上面就是對於一個 rigidbody的移動和旋轉的方法。</p>\n<h3 id=\"這裡再稍微說一下-MovePosition-跟-Rigidbody-AddForce-的區別\"><a href=\"#這裡再稍微說一下-MovePosition-跟-Rigidbody-AddForce-的區別\" class=\"headerlink\" title=\"這裡再稍微說一下 MovePosition 跟 Rigidbody.AddForce() 的區別\"></a>這裡再稍微說一下 MovePosition 跟 Rigidbody.AddForce() 的區別</h3><p>MovePosition 是提供一個新的位置，讓rigidbody 從舊的位置去到新的位置，可以實現瞬移，跟物理學沒有半點關係 （瞬移根本就違反物理學， ps:這裡是2016年的物理學）<br>addforce 是加一個力給這個rigidbody 讓它移動，像推它，踢它甚至爆炸的力，如果摩擦力為0，根據物理學，物體會一直運動， addforce 不能實現瞬移。 </p>\n"},{"title":"php Auth","date":"2017-01-24T04:39:58.000Z","_content":"\n.htaccess  放這個, 放在其他RewriteRule上面\n\n\t\t  RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]\n\nphp 里放這個\n\t\t\n\t\tif (empty($_SERVER['HTTP_AUTHORIZATION'])) {\n\n\t\t\t header('WWW-Authenticate: Basic realm=\"My Realm\"');\n\t\t\t header('HTTP/1.0 401 Unauthorized');\n\t\t\t echo 'Text to send if user hits Cancel button';\n\t\t\t exit;\n\t\t}\n\t\telse{\n\t\t\t\n\t\t\tvar_dump($_SERVER['PHP_AUTH_USER'], $_SERVER['PHP_AUTH_PW']);\n\t\t}","source":"_posts/php-auth.md","raw":"---\ntitle: php Auth\ndate: 2017-01-24 12:39:58\ntags:\n---\n\n.htaccess  放這個, 放在其他RewriteRule上面\n\n\t\t  RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]\n\nphp 里放這個\n\t\t\n\t\tif (empty($_SERVER['HTTP_AUTHORIZATION'])) {\n\n\t\t\t header('WWW-Authenticate: Basic realm=\"My Realm\"');\n\t\t\t header('HTTP/1.0 401 Unauthorized');\n\t\t\t echo 'Text to send if user hits Cancel button';\n\t\t\t exit;\n\t\t}\n\t\telse{\n\t\t\t\n\t\t\tvar_dump($_SERVER['PHP_AUTH_USER'], $_SERVER['PHP_AUTH_PW']);\n\t\t}","slug":"php-auth","published":1,"updated":"2017-05-26T04:13:27.000Z","_id":"cj35c1ue70005af7x9v04e4jc","comments":1,"layout":"post","photos":[],"link":"","content":"<p>.htaccess  放這個, 放在其他RewriteRule上面</p>\n<pre><code>RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]\n</code></pre><p>php 里放這個</p>\n<pre><code>if (empty($_SERVER[&apos;HTTP_AUTHORIZATION&apos;])) {\n\n     header(&apos;WWW-Authenticate: Basic realm=&quot;My Realm&quot;&apos;);\n     header(&apos;HTTP/1.0 401 Unauthorized&apos;);\n     echo &apos;Text to send if user hits Cancel button&apos;;\n     exit;\n}\nelse{\n\n    var_dump($_SERVER[&apos;PHP_AUTH_USER&apos;], $_SERVER[&apos;PHP_AUTH_PW&apos;]);\n}\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>.htaccess  放這個, 放在其他RewriteRule上面</p>\n<pre><code>RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]\n</code></pre><p>php 里放這個</p>\n<pre><code>if (empty($_SERVER[&apos;HTTP_AUTHORIZATION&apos;])) {\n\n     header(&apos;WWW-Authenticate: Basic realm=&quot;My Realm&quot;&apos;);\n     header(&apos;HTTP/1.0 401 Unauthorized&apos;);\n     echo &apos;Text to send if user hits Cancel button&apos;;\n     exit;\n}\nelse{\n\n    var_dump($_SERVER[&apos;PHP_AUTH_USER&apos;], $_SERVER[&apos;PHP_AUTH_PW&apos;]);\n}\n</code></pre>"},{"title":"phpExcel","date":"2016-11-10T04:14:00.000Z","_content":"\nphpExcel 下載地址\nhttps://phpexcel.codeplex.com/\n\n直接先上代碼\n\n\t\t\t$objPHPExcel = new PHPExcel();\n\t\t\t$objPHPExcel->setActiveSheetIndex(0);\n\t\t\t$objPHPExcel->getActiveSheet()->setTitle('');\n\n\t\t\t//這裡取到資料\n\t\t\t$records = $this->db->get(\"\")->result();\n\n\t\t\t//這裡是excel 的首行的資料\n\t\t\t$header_arr = array();\n\t\t\t\n\t\t\t//把首行放進excel\n\t\t\t$col = 0;\n\t\t\tforeach ($header_arr as $key => $value) {\n\t\t\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($col++, 1, $value);\n\t\t\t}\n\t\t\t\n\t\t\t//把資料放進excel 這裡用的方法是 setCellValueByColumnAndRow(col , row , value)\n\t\t\tforeach($records as $row=>$record) {\n\t\t\t\t$col = 0;\n\t\t\t\tforeach($record as $key=>$value) {\n\t\t\t\t\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($col++, $row+2, $value);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// 這裡的代碼是固定的，用來自動調整格子的大小\n\t\t\tforeach(range('A','Z') as $columnID) {\n\t\t\t   $objPHPExcel->getActiveSheet()->getColumnDimension($columnID)->setAutoSize(true);\n\t\t\t   foreach(range('A','Z') as $columnID2) {\n\t\t\t   \t$objPHPExcel->getActiveSheet()->getColumnDimension($columnID.$columnID2)->setAutoSize(true);\n\t\t\t   }\n\t\t\t}\n\t\t\t\n\t\t\t//選擇excel的格式\n\t\t\t//$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');\n\t\t\t$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');\n\t\t\t\n\t\t\t//這裡就是excel 名 ，結尾可以用 xlsx 或者 xls \n\t\t\t$filename = date(\"Y-m-d\").\"somename.xlsx\";\n\n\t\t\theader('Content-Type: application/vnd.ms-excel');\n\t\t\t\n\t\t\theader('Content-Disposition: attachment;filename='.$filename);\n\t\t\theader('Cache-Control: max-age=0');\n\t\t\t$objWriter->save('php://output');\n\n\n","source":"_posts/phpexcel.md","raw":"---\ntitle: phpExcel\ndate: 2016-11-10 12:14:00\ntags:\n---\n\nphpExcel 下載地址\nhttps://phpexcel.codeplex.com/\n\n直接先上代碼\n\n\t\t\t$objPHPExcel = new PHPExcel();\n\t\t\t$objPHPExcel->setActiveSheetIndex(0);\n\t\t\t$objPHPExcel->getActiveSheet()->setTitle('');\n\n\t\t\t//這裡取到資料\n\t\t\t$records = $this->db->get(\"\")->result();\n\n\t\t\t//這裡是excel 的首行的資料\n\t\t\t$header_arr = array();\n\t\t\t\n\t\t\t//把首行放進excel\n\t\t\t$col = 0;\n\t\t\tforeach ($header_arr as $key => $value) {\n\t\t\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($col++, 1, $value);\n\t\t\t}\n\t\t\t\n\t\t\t//把資料放進excel 這裡用的方法是 setCellValueByColumnAndRow(col , row , value)\n\t\t\tforeach($records as $row=>$record) {\n\t\t\t\t$col = 0;\n\t\t\t\tforeach($record as $key=>$value) {\n\t\t\t\t\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($col++, $row+2, $value);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// 這裡的代碼是固定的，用來自動調整格子的大小\n\t\t\tforeach(range('A','Z') as $columnID) {\n\t\t\t   $objPHPExcel->getActiveSheet()->getColumnDimension($columnID)->setAutoSize(true);\n\t\t\t   foreach(range('A','Z') as $columnID2) {\n\t\t\t   \t$objPHPExcel->getActiveSheet()->getColumnDimension($columnID.$columnID2)->setAutoSize(true);\n\t\t\t   }\n\t\t\t}\n\t\t\t\n\t\t\t//選擇excel的格式\n\t\t\t//$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');\n\t\t\t$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');\n\t\t\t\n\t\t\t//這裡就是excel 名 ，結尾可以用 xlsx 或者 xls \n\t\t\t$filename = date(\"Y-m-d\").\"somename.xlsx\";\n\n\t\t\theader('Content-Type: application/vnd.ms-excel');\n\t\t\t\n\t\t\theader('Content-Disposition: attachment;filename='.$filename);\n\t\t\theader('Cache-Control: max-age=0');\n\t\t\t$objWriter->save('php://output');\n\n\n","slug":"phpexcel","published":1,"updated":"2017-05-26T04:13:27.000Z","_id":"cj35c1ued0007af7x1y52uepm","comments":1,"layout":"post","photos":[],"link":"","content":"<p>phpExcel 下載地址<br><a href=\"https://phpexcel.codeplex.com/\" target=\"_blank\" rel=\"external\">https://phpexcel.codeplex.com/</a></p>\n<p>直接先上代碼</p>\n<pre><code>$objPHPExcel = new PHPExcel();\n$objPHPExcel-&gt;setActiveSheetIndex(0);\n$objPHPExcel-&gt;getActiveSheet()-&gt;setTitle(&apos;&apos;);\n\n//這裡取到資料\n$records = $this-&gt;db-&gt;get(&quot;&quot;)-&gt;result();\n\n//這裡是excel 的首行的資料\n$header_arr = array();\n\n//把首行放進excel\n$col = 0;\nforeach ($header_arr as $key =&gt; $value) {\n$objPHPExcel-&gt;getActiveSheet()-&gt;setCellValueByColumnAndRow($col++, 1, $value);\n}\n\n//把資料放進excel 這裡用的方法是 setCellValueByColumnAndRow(col , row , value)\nforeach($records as $row=&gt;$record) {\n    $col = 0;\n    foreach($record as $key=&gt;$value) {\n        $objPHPExcel-&gt;getActiveSheet()-&gt;setCellValueByColumnAndRow($col++, $row+2, $value);\n    }\n}\n\n// 這裡的代碼是固定的，用來自動調整格子的大小\nforeach(range(&apos;A&apos;,&apos;Z&apos;) as $columnID) {\n   $objPHPExcel-&gt;getActiveSheet()-&gt;getColumnDimension($columnID)-&gt;setAutoSize(true);\n   foreach(range(&apos;A&apos;,&apos;Z&apos;) as $columnID2) {\n       $objPHPExcel-&gt;getActiveSheet()-&gt;getColumnDimension($columnID.$columnID2)-&gt;setAutoSize(true);\n   }\n}\n\n//選擇excel的格式\n//$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, &apos;Excel5&apos;);\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, &apos;Excel2007&apos;);\n\n//這裡就是excel 名 ，結尾可以用 xlsx 或者 xls \n$filename = date(&quot;Y-m-d&quot;).&quot;somename.xlsx&quot;;\n\nheader(&apos;Content-Type: application/vnd.ms-excel&apos;);\n\nheader(&apos;Content-Disposition: attachment;filename=&apos;.$filename);\nheader(&apos;Cache-Control: max-age=0&apos;);\n$objWriter-&gt;save(&apos;php://output&apos;);\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>phpExcel 下載地址<br><a href=\"https://phpexcel.codeplex.com/\" target=\"_blank\" rel=\"external\">https://phpexcel.codeplex.com/</a></p>\n<p>直接先上代碼</p>\n<pre><code>$objPHPExcel = new PHPExcel();\n$objPHPExcel-&gt;setActiveSheetIndex(0);\n$objPHPExcel-&gt;getActiveSheet()-&gt;setTitle(&apos;&apos;);\n\n//這裡取到資料\n$records = $this-&gt;db-&gt;get(&quot;&quot;)-&gt;result();\n\n//這裡是excel 的首行的資料\n$header_arr = array();\n\n//把首行放進excel\n$col = 0;\nforeach ($header_arr as $key =&gt; $value) {\n$objPHPExcel-&gt;getActiveSheet()-&gt;setCellValueByColumnAndRow($col++, 1, $value);\n}\n\n//把資料放進excel 這裡用的方法是 setCellValueByColumnAndRow(col , row , value)\nforeach($records as $row=&gt;$record) {\n    $col = 0;\n    foreach($record as $key=&gt;$value) {\n        $objPHPExcel-&gt;getActiveSheet()-&gt;setCellValueByColumnAndRow($col++, $row+2, $value);\n    }\n}\n\n// 這裡的代碼是固定的，用來自動調整格子的大小\nforeach(range(&apos;A&apos;,&apos;Z&apos;) as $columnID) {\n   $objPHPExcel-&gt;getActiveSheet()-&gt;getColumnDimension($columnID)-&gt;setAutoSize(true);\n   foreach(range(&apos;A&apos;,&apos;Z&apos;) as $columnID2) {\n       $objPHPExcel-&gt;getActiveSheet()-&gt;getColumnDimension($columnID.$columnID2)-&gt;setAutoSize(true);\n   }\n}\n\n//選擇excel的格式\n//$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, &apos;Excel5&apos;);\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, &apos;Excel2007&apos;);\n\n//這裡就是excel 名 ，結尾可以用 xlsx 或者 xls \n$filename = date(&quot;Y-m-d&quot;).&quot;somename.xlsx&quot;;\n\nheader(&apos;Content-Type: application/vnd.ms-excel&apos;);\n\nheader(&apos;Content-Disposition: attachment;filename=&apos;.$filename);\nheader(&apos;Cache-Control: max-age=0&apos;);\n$objWriter-&gt;save(&apos;php://output&apos;);\n</code></pre>"},{"title":"關於ssh的一點東西","date":"2016-12-01T06:55:25.000Z","_content":"### login\t\n \tssh username@host -p port  \n\n### switch user\n\tsu\n\n\n### list all \n\tll\n\n\n### check disk space\n\tdf -h \n\n### open folder \n\tcd foldername \n\n### preview file \n\tvi filename \n\n### edit file \n在preview 裡面按 i \n\n### save file \nshift + :  然後 \nq (表示直接退出)\nwq (保存后退出)\n\n","source":"_posts/ssh.md","raw":"---\ntitle: 關於ssh的一點東西\ndate: 2016-12-01 14:55:25\ntags:\n---\n### login\t\n \tssh username@host -p port  \n\n### switch user\n\tsu\n\n\n### list all \n\tll\n\n\n### check disk space\n\tdf -h \n\n### open folder \n\tcd foldername \n\n### preview file \n\tvi filename \n\n### edit file \n在preview 裡面按 i \n\n### save file \nshift + :  然後 \nq (表示直接退出)\nwq (保存后退出)\n\n","slug":"ssh","published":1,"updated":"2017-05-26T04:13:27.000Z","_id":"cj35c1uee0008af7xgqu76w96","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"login\"><a href=\"#login\" class=\"headerlink\" title=\"login\"></a>login</h3><pre><code>ssh username@host -p port  \n</code></pre><h3 id=\"switch-user\"><a href=\"#switch-user\" class=\"headerlink\" title=\"switch user\"></a>switch user</h3><pre><code>su\n</code></pre><h3 id=\"list-all\"><a href=\"#list-all\" class=\"headerlink\" title=\"list all\"></a>list all</h3><pre><code>ll\n</code></pre><h3 id=\"check-disk-space\"><a href=\"#check-disk-space\" class=\"headerlink\" title=\"check disk space\"></a>check disk space</h3><pre><code>df -h \n</code></pre><h3 id=\"open-folder\"><a href=\"#open-folder\" class=\"headerlink\" title=\"open folder\"></a>open folder</h3><pre><code>cd foldername \n</code></pre><h3 id=\"preview-file\"><a href=\"#preview-file\" class=\"headerlink\" title=\"preview file\"></a>preview file</h3><pre><code>vi filename \n</code></pre><h3 id=\"edit-file\"><a href=\"#edit-file\" class=\"headerlink\" title=\"edit file\"></a>edit file</h3><p>在preview 裡面按 i </p>\n<h3 id=\"save-file\"><a href=\"#save-file\" class=\"headerlink\" title=\"save file\"></a>save file</h3><p>shift + :  然後<br>q (表示直接退出)<br>wq (保存后退出)</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"login\"><a href=\"#login\" class=\"headerlink\" title=\"login\"></a>login</h3><pre><code>ssh username@host -p port  \n</code></pre><h3 id=\"switch-user\"><a href=\"#switch-user\" class=\"headerlink\" title=\"switch user\"></a>switch user</h3><pre><code>su\n</code></pre><h3 id=\"list-all\"><a href=\"#list-all\" class=\"headerlink\" title=\"list all\"></a>list all</h3><pre><code>ll\n</code></pre><h3 id=\"check-disk-space\"><a href=\"#check-disk-space\" class=\"headerlink\" title=\"check disk space\"></a>check disk space</h3><pre><code>df -h \n</code></pre><h3 id=\"open-folder\"><a href=\"#open-folder\" class=\"headerlink\" title=\"open folder\"></a>open folder</h3><pre><code>cd foldername \n</code></pre><h3 id=\"preview-file\"><a href=\"#preview-file\" class=\"headerlink\" title=\"preview file\"></a>preview file</h3><pre><code>vi filename \n</code></pre><h3 id=\"edit-file\"><a href=\"#edit-file\" class=\"headerlink\" title=\"edit file\"></a>edit file</h3><p>在preview 裡面按 i </p>\n<h3 id=\"save-file\"><a href=\"#save-file\" class=\"headerlink\" title=\"save file\"></a>save file</h3><p>shift + :  然後<br>q (表示直接退出)<br>wq (保存后退出)</p>\n"},{"title":"water","date":"2016-11-15T06:05:57.000Z","_content":"\n\n\t\tvar ripple = (function(img_src, container){\n\t\t    var img = new Image,\n\t\t    img_data, delay = 30, width, height, \n\t\t         half_width, half_height, riprad = 3, oldind, newind, mapind, size, ripplemap = [], last_map = [], ripple, ripple_data, texture,\n\t\t          texture_data, is_running = true, is_disturbed = false, timer_id, canvas = document.createElement('canvas'), /** @type {CanvasRenderingContext2D} */ ctx;\n\t\t     \n\t\t    function init(){\n\t\t        img.width = 980;\n\t\t        img.height = 900;\n\t\t        width = img.width;\n\t\t        height = img.height;\n\t\t        half_width = width >> 1;\n\t\t        half_height = height >> 1;\n\t\t        size = width * (height + 2) * 2;\n\t\t        canvas.width = width;\n\t\t        canvas.height = height;\n\t\t        oldind = width;\n\t\t        newind = width * (height + 3);\n\t\t         \n\t\t        /** @type {CanvasRenderingContext2D} */\n\t\t        ctx = canvas.getContext('2d');\n\t\t        container.appendChild(canvas);\n\t\t        ctx.drawImage(img, 0, 0, width, height);\n\t\t        for (var i = 0; i < size; i++) {\n\t\t            last_map[i] = ripplemap[i] = 0;\n\t\t        }\n\t\t        texture = ctx.getImageData(0, 0, width, height);\n\t\t        texture_data = texture.data;\n\t\t        ripple = ctx.getImageData(0, 0, width, height);\n\t\t        ripple_data = ripple.data;\n\t\t         \n\t\t         \n\t\t//         container.addEventListener('mousemove', function(/* Event */evt){\n\t\t//             disturb(evt.offsetX || evt.layerX, evt.offsetY || evt.layerY);\n\t\t//         }, false);\n\n\t\t        start();\n\t\t//         disturb(180,130);\n\t\t    }\n\t\t     \n\t\t    function stop(){\n\t\t        if (timer_id) \n\t\t            clearInterval(timer_id);\n\t\t    }\n\t\t     \n\t\t    function start(){\n\t\t        stop();\n\t\t        timer_id = setInterval(run, delay);\n\t\t    }\n\t\t     \n\t\t    function run(){\n\t\t        if (is_disturbed) {\n\t\t            newframe(width, height);\n\t\t            \n\t\t            ctx.putImageData(ripple, 0, 0);\n\t\t        }else{\n\t\t             \n\t\t        }\n\t\t    }\n\t\t     \n\t\t    function disturb(dx, dy){\n\t\t        dx <<= 0;\n\t\t        dy <<= 0;\n\t\t        is_disturbed = true;\n\t\t         \n\t\t        for (var j = dy - riprad; j < dy + riprad; j++) {\n\t\t            for (var k = dx - riprad; k < dx + riprad; k++) {\n\t\t                ripplemap[oldind + (j * width) + k] += 150;\n\t\t            }\n\t\t        }\n\t\t         \n\t\t        //newframe(width, height);\n\t\t        //ctx.putImageData(ripple, 0, 0);\n\t\t    }\n\t\t     \n\t\t    function newframe(){\n\t\t        var i, a, b, data, cur_pixel, new_pixel, old_data;\n\t\t         \n\t\t        i = oldind;\n\t\t        oldind = newind;\n\t\t        newind = i;\n\t\t         \n\t\t        i = 0;\n\t\t        mapind = oldind;\n\t\t        var _width = width, _height = height, _ripplemap = ripplemap, _mapind = mapind, _newind = newind, _last_map = last_map, _rd = ripple.data, _td = texture.data, _half_width = half_width, _half_height = half_height, _is_disturbed = false;\n\t\t        for (var y = 0; y < _height; y++) {\n\t\t            for (var x = 0; x < _width; x++) {\n\t\t                data = (_ripplemap[_mapind - _width] +\n\t\t                _ripplemap[_mapind + _width] +\n\t\t                _ripplemap[_mapind - 1] +\n\t\t                _ripplemap[_mapind + 1]) >>\n\t\t                1;\n\t\t                 \n\t\t                data -= _ripplemap[_newind + i];\n\t\t                data -= data >> 4;\n\t\t                 \n\t\t                _ripplemap[_newind + i] = data;\n\n\n\t\t                //where data=0 then still, where data>0 then wave\n\t\t                data = 1024 - data;\n\t\t                 \n\t\t                old_data = _last_map[i];\n\t\t                _last_map[i] = data;\n\t\t                 \n\t\t                if (old_data != data) {\n\t\t                    //offsets\n\t\t                    _is_disturbed = true;\n\t\t                    a = (((x - _half_width) * data / 1024) << 0) + _half_width;\n\t\t                    b = (((y - _half_height) * data / 1024) << 0) + _half_height;\n\t\t                     \n\t\t                    //bounds check\n\t\t                    if (a >= _width) \n\t\t                        a = _width - 1;\n\t\t                    if (a < 0) \n\t\t                        a = 0;\n\t\t                    if (b >= _height) \n\t\t                        b = _height - 1;\n\t\t                    if (b < 0) \n\t\t                        b = 0;\n\t\t                     \n\t\t                    new_pixel = (a + (b * _width)) * 4;\n\t\t                    cur_pixel = i * 4;\n\t\t                     \n\t\t                    _rd[cur_pixel] = _td[new_pixel];\n\t\t                    _rd[cur_pixel + 1] = _td[new_pixel + 1];\n\t\t                    _rd[cur_pixel + 2] = _td[new_pixel + 2];\n\t\t                    //_rd[cur_pixel + 3] = _td[new_pixel + 3];\n\t\t                }\n\t\t                 \n\t\t                ++_mapind;\n\t\t                ++i;\n\t\t            }\n\t\t        }\n\t\t        mapind = _mapind;\n\t\t        is_disturbed = _is_disturbed;\n\t\t    }\n\t\t     \n\t\t    img.onload = init;\n\t\t    img.src = img_src;\n\t\t     \n\t\t    return {\n\t\t        start: start,\n\t\t        stop: stop,\n\t\t        disturb: disturb\n\t\t    }\n\t\t});\t","source":"_posts/water.md","raw":"---\ntitle: water\ndate: 2016-11-15 14:05:57\ntags:\n---\n\n\n\t\tvar ripple = (function(img_src, container){\n\t\t    var img = new Image,\n\t\t    img_data, delay = 30, width, height, \n\t\t         half_width, half_height, riprad = 3, oldind, newind, mapind, size, ripplemap = [], last_map = [], ripple, ripple_data, texture,\n\t\t          texture_data, is_running = true, is_disturbed = false, timer_id, canvas = document.createElement('canvas'), /** @type {CanvasRenderingContext2D} */ ctx;\n\t\t     \n\t\t    function init(){\n\t\t        img.width = 980;\n\t\t        img.height = 900;\n\t\t        width = img.width;\n\t\t        height = img.height;\n\t\t        half_width = width >> 1;\n\t\t        half_height = height >> 1;\n\t\t        size = width * (height + 2) * 2;\n\t\t        canvas.width = width;\n\t\t        canvas.height = height;\n\t\t        oldind = width;\n\t\t        newind = width * (height + 3);\n\t\t         \n\t\t        /** @type {CanvasRenderingContext2D} */\n\t\t        ctx = canvas.getContext('2d');\n\t\t        container.appendChild(canvas);\n\t\t        ctx.drawImage(img, 0, 0, width, height);\n\t\t        for (var i = 0; i < size; i++) {\n\t\t            last_map[i] = ripplemap[i] = 0;\n\t\t        }\n\t\t        texture = ctx.getImageData(0, 0, width, height);\n\t\t        texture_data = texture.data;\n\t\t        ripple = ctx.getImageData(0, 0, width, height);\n\t\t        ripple_data = ripple.data;\n\t\t         \n\t\t         \n\t\t//         container.addEventListener('mousemove', function(/* Event */evt){\n\t\t//             disturb(evt.offsetX || evt.layerX, evt.offsetY || evt.layerY);\n\t\t//         }, false);\n\n\t\t        start();\n\t\t//         disturb(180,130);\n\t\t    }\n\t\t     \n\t\t    function stop(){\n\t\t        if (timer_id) \n\t\t            clearInterval(timer_id);\n\t\t    }\n\t\t     \n\t\t    function start(){\n\t\t        stop();\n\t\t        timer_id = setInterval(run, delay);\n\t\t    }\n\t\t     \n\t\t    function run(){\n\t\t        if (is_disturbed) {\n\t\t            newframe(width, height);\n\t\t            \n\t\t            ctx.putImageData(ripple, 0, 0);\n\t\t        }else{\n\t\t             \n\t\t        }\n\t\t    }\n\t\t     \n\t\t    function disturb(dx, dy){\n\t\t        dx <<= 0;\n\t\t        dy <<= 0;\n\t\t        is_disturbed = true;\n\t\t         \n\t\t        for (var j = dy - riprad; j < dy + riprad; j++) {\n\t\t            for (var k = dx - riprad; k < dx + riprad; k++) {\n\t\t                ripplemap[oldind + (j * width) + k] += 150;\n\t\t            }\n\t\t        }\n\t\t         \n\t\t        //newframe(width, height);\n\t\t        //ctx.putImageData(ripple, 0, 0);\n\t\t    }\n\t\t     \n\t\t    function newframe(){\n\t\t        var i, a, b, data, cur_pixel, new_pixel, old_data;\n\t\t         \n\t\t        i = oldind;\n\t\t        oldind = newind;\n\t\t        newind = i;\n\t\t         \n\t\t        i = 0;\n\t\t        mapind = oldind;\n\t\t        var _width = width, _height = height, _ripplemap = ripplemap, _mapind = mapind, _newind = newind, _last_map = last_map, _rd = ripple.data, _td = texture.data, _half_width = half_width, _half_height = half_height, _is_disturbed = false;\n\t\t        for (var y = 0; y < _height; y++) {\n\t\t            for (var x = 0; x < _width; x++) {\n\t\t                data = (_ripplemap[_mapind - _width] +\n\t\t                _ripplemap[_mapind + _width] +\n\t\t                _ripplemap[_mapind - 1] +\n\t\t                _ripplemap[_mapind + 1]) >>\n\t\t                1;\n\t\t                 \n\t\t                data -= _ripplemap[_newind + i];\n\t\t                data -= data >> 4;\n\t\t                 \n\t\t                _ripplemap[_newind + i] = data;\n\n\n\t\t                //where data=0 then still, where data>0 then wave\n\t\t                data = 1024 - data;\n\t\t                 \n\t\t                old_data = _last_map[i];\n\t\t                _last_map[i] = data;\n\t\t                 \n\t\t                if (old_data != data) {\n\t\t                    //offsets\n\t\t                    _is_disturbed = true;\n\t\t                    a = (((x - _half_width) * data / 1024) << 0) + _half_width;\n\t\t                    b = (((y - _half_height) * data / 1024) << 0) + _half_height;\n\t\t                     \n\t\t                    //bounds check\n\t\t                    if (a >= _width) \n\t\t                        a = _width - 1;\n\t\t                    if (a < 0) \n\t\t                        a = 0;\n\t\t                    if (b >= _height) \n\t\t                        b = _height - 1;\n\t\t                    if (b < 0) \n\t\t                        b = 0;\n\t\t                     \n\t\t                    new_pixel = (a + (b * _width)) * 4;\n\t\t                    cur_pixel = i * 4;\n\t\t                     \n\t\t                    _rd[cur_pixel] = _td[new_pixel];\n\t\t                    _rd[cur_pixel + 1] = _td[new_pixel + 1];\n\t\t                    _rd[cur_pixel + 2] = _td[new_pixel + 2];\n\t\t                    //_rd[cur_pixel + 3] = _td[new_pixel + 3];\n\t\t                }\n\t\t                 \n\t\t                ++_mapind;\n\t\t                ++i;\n\t\t            }\n\t\t        }\n\t\t        mapind = _mapind;\n\t\t        is_disturbed = _is_disturbed;\n\t\t    }\n\t\t     \n\t\t    img.onload = init;\n\t\t    img.src = img_src;\n\t\t     \n\t\t    return {\n\t\t        start: start,\n\t\t        stop: stop,\n\t\t        disturb: disturb\n\t\t    }\n\t\t});\t","slug":"water","published":1,"updated":"2017-05-26T04:13:27.000Z","_id":"cj35c1ueg0009af7xkqhkact1","comments":1,"layout":"post","photos":[],"link":"","content":"<pre><code>var ripple = (function(img_src, container){\n    var img = new Image,\n    img_data, delay = 30, width, height, \n         half_width, half_height, riprad = 3, oldind, newind, mapind, size, ripplemap = [], last_map = [], ripple, ripple_data, texture,\n          texture_data, is_running = true, is_disturbed = false, timer_id, canvas = document.createElement(&apos;canvas&apos;), /** @type {CanvasRenderingContext2D} */ ctx;\n\n    function init(){\n        img.width = 980;\n        img.height = 900;\n        width = img.width;\n        height = img.height;\n        half_width = width &gt;&gt; 1;\n        half_height = height &gt;&gt; 1;\n        size = width * (height + 2) * 2;\n        canvas.width = width;\n        canvas.height = height;\n        oldind = width;\n        newind = width * (height + 3);\n\n        /** @type {CanvasRenderingContext2D} */\n        ctx = canvas.getContext(&apos;2d&apos;);\n        container.appendChild(canvas);\n        ctx.drawImage(img, 0, 0, width, height);\n        for (var i = 0; i &lt; size; i++) {\n            last_map[i] = ripplemap[i] = 0;\n        }\n        texture = ctx.getImageData(0, 0, width, height);\n        texture_data = texture.data;\n        ripple = ctx.getImageData(0, 0, width, height);\n        ripple_data = ripple.data;\n\n\n//         container.addEventListener(&apos;mousemove&apos;, function(/* Event */evt){\n//             disturb(evt.offsetX || evt.layerX, evt.offsetY || evt.layerY);\n//         }, false);\n\n        start();\n//         disturb(180,130);\n    }\n\n    function stop(){\n        if (timer_id) \n            clearInterval(timer_id);\n    }\n\n    function start(){\n        stop();\n        timer_id = setInterval(run, delay);\n    }\n\n    function run(){\n        if (is_disturbed) {\n            newframe(width, height);\n\n            ctx.putImageData(ripple, 0, 0);\n        }else{\n\n        }\n    }\n\n    function disturb(dx, dy){\n        dx &lt;&lt;= 0;\n        dy &lt;&lt;= 0;\n        is_disturbed = true;\n\n        for (var j = dy - riprad; j &lt; dy + riprad; j++) {\n            for (var k = dx - riprad; k &lt; dx + riprad; k++) {\n                ripplemap[oldind + (j * width) + k] += 150;\n            }\n        }\n\n        //newframe(width, height);\n        //ctx.putImageData(ripple, 0, 0);\n    }\n\n    function newframe(){\n        var i, a, b, data, cur_pixel, new_pixel, old_data;\n\n        i = oldind;\n        oldind = newind;\n        newind = i;\n\n        i = 0;\n        mapind = oldind;\n        var _width = width, _height = height, _ripplemap = ripplemap, _mapind = mapind, _newind = newind, _last_map = last_map, _rd = ripple.data, _td = texture.data, _half_width = half_width, _half_height = half_height, _is_disturbed = false;\n        for (var y = 0; y &lt; _height; y++) {\n            for (var x = 0; x &lt; _width; x++) {\n                data = (_ripplemap[_mapind - _width] +\n                _ripplemap[_mapind + _width] +\n                _ripplemap[_mapind - 1] +\n                _ripplemap[_mapind + 1]) &gt;&gt;\n                1;\n\n                data -= _ripplemap[_newind + i];\n                data -= data &gt;&gt; 4;\n\n                _ripplemap[_newind + i] = data;\n\n\n                //where data=0 then still, where data&gt;0 then wave\n                data = 1024 - data;\n\n                old_data = _last_map[i];\n                _last_map[i] = data;\n\n                if (old_data != data) {\n                    //offsets\n                    _is_disturbed = true;\n                    a = (((x - _half_width) * data / 1024) &lt;&lt; 0) + _half_width;\n                    b = (((y - _half_height) * data / 1024) &lt;&lt; 0) + _half_height;\n\n                    //bounds check\n                    if (a &gt;= _width) \n                        a = _width - 1;\n                    if (a &lt; 0) \n                        a = 0;\n                    if (b &gt;= _height) \n                        b = _height - 1;\n                    if (b &lt; 0) \n                        b = 0;\n\n                    new_pixel = (a + (b * _width)) * 4;\n                    cur_pixel = i * 4;\n\n                    _rd[cur_pixel] = _td[new_pixel];\n                    _rd[cur_pixel + 1] = _td[new_pixel + 1];\n                    _rd[cur_pixel + 2] = _td[new_pixel + 2];\n                    //_rd[cur_pixel + 3] = _td[new_pixel + 3];\n                }\n\n                ++_mapind;\n                ++i;\n            }\n        }\n        mapind = _mapind;\n        is_disturbed = _is_disturbed;\n    }\n\n    img.onload = init;\n    img.src = img_src;\n\n    return {\n        start: start,\n        stop: stop,\n        disturb: disturb\n    }\n});    \n</code></pre>","site":{"data":{}},"excerpt":"","more":"<pre><code>var ripple = (function(img_src, container){\n    var img = new Image,\n    img_data, delay = 30, width, height, \n         half_width, half_height, riprad = 3, oldind, newind, mapind, size, ripplemap = [], last_map = [], ripple, ripple_data, texture,\n          texture_data, is_running = true, is_disturbed = false, timer_id, canvas = document.createElement(&apos;canvas&apos;), /** @type {CanvasRenderingContext2D} */ ctx;\n\n    function init(){\n        img.width = 980;\n        img.height = 900;\n        width = img.width;\n        height = img.height;\n        half_width = width &gt;&gt; 1;\n        half_height = height &gt;&gt; 1;\n        size = width * (height + 2) * 2;\n        canvas.width = width;\n        canvas.height = height;\n        oldind = width;\n        newind = width * (height + 3);\n\n        /** @type {CanvasRenderingContext2D} */\n        ctx = canvas.getContext(&apos;2d&apos;);\n        container.appendChild(canvas);\n        ctx.drawImage(img, 0, 0, width, height);\n        for (var i = 0; i &lt; size; i++) {\n            last_map[i] = ripplemap[i] = 0;\n        }\n        texture = ctx.getImageData(0, 0, width, height);\n        texture_data = texture.data;\n        ripple = ctx.getImageData(0, 0, width, height);\n        ripple_data = ripple.data;\n\n\n//         container.addEventListener(&apos;mousemove&apos;, function(/* Event */evt){\n//             disturb(evt.offsetX || evt.layerX, evt.offsetY || evt.layerY);\n//         }, false);\n\n        start();\n//         disturb(180,130);\n    }\n\n    function stop(){\n        if (timer_id) \n            clearInterval(timer_id);\n    }\n\n    function start(){\n        stop();\n        timer_id = setInterval(run, delay);\n    }\n\n    function run(){\n        if (is_disturbed) {\n            newframe(width, height);\n\n            ctx.putImageData(ripple, 0, 0);\n        }else{\n\n        }\n    }\n\n    function disturb(dx, dy){\n        dx &lt;&lt;= 0;\n        dy &lt;&lt;= 0;\n        is_disturbed = true;\n\n        for (var j = dy - riprad; j &lt; dy + riprad; j++) {\n            for (var k = dx - riprad; k &lt; dx + riprad; k++) {\n                ripplemap[oldind + (j * width) + k] += 150;\n            }\n        }\n\n        //newframe(width, height);\n        //ctx.putImageData(ripple, 0, 0);\n    }\n\n    function newframe(){\n        var i, a, b, data, cur_pixel, new_pixel, old_data;\n\n        i = oldind;\n        oldind = newind;\n        newind = i;\n\n        i = 0;\n        mapind = oldind;\n        var _width = width, _height = height, _ripplemap = ripplemap, _mapind = mapind, _newind = newind, _last_map = last_map, _rd = ripple.data, _td = texture.data, _half_width = half_width, _half_height = half_height, _is_disturbed = false;\n        for (var y = 0; y &lt; _height; y++) {\n            for (var x = 0; x &lt; _width; x++) {\n                data = (_ripplemap[_mapind - _width] +\n                _ripplemap[_mapind + _width] +\n                _ripplemap[_mapind - 1] +\n                _ripplemap[_mapind + 1]) &gt;&gt;\n                1;\n\n                data -= _ripplemap[_newind + i];\n                data -= data &gt;&gt; 4;\n\n                _ripplemap[_newind + i] = data;\n\n\n                //where data=0 then still, where data&gt;0 then wave\n                data = 1024 - data;\n\n                old_data = _last_map[i];\n                _last_map[i] = data;\n\n                if (old_data != data) {\n                    //offsets\n                    _is_disturbed = true;\n                    a = (((x - _half_width) * data / 1024) &lt;&lt; 0) + _half_width;\n                    b = (((y - _half_height) * data / 1024) &lt;&lt; 0) + _half_height;\n\n                    //bounds check\n                    if (a &gt;= _width) \n                        a = _width - 1;\n                    if (a &lt; 0) \n                        a = 0;\n                    if (b &gt;= _height) \n                        b = _height - 1;\n                    if (b &lt; 0) \n                        b = 0;\n\n                    new_pixel = (a + (b * _width)) * 4;\n                    cur_pixel = i * 4;\n\n                    _rd[cur_pixel] = _td[new_pixel];\n                    _rd[cur_pixel + 1] = _td[new_pixel + 1];\n                    _rd[cur_pixel + 2] = _td[new_pixel + 2];\n                    //_rd[cur_pixel + 3] = _td[new_pixel + 3];\n                }\n\n                ++_mapind;\n                ++i;\n            }\n        }\n        mapind = _mapind;\n        is_disturbed = _is_disturbed;\n    }\n\n    img.onload = init;\n    img.src = img_src;\n\n    return {\n        start: start,\n        stop: stop,\n        disturb: disturb\n    }\n});    \n</code></pre>"},{"title":"開始做一個phaser遊戲！","_content":"","source":"_drafts/game.md","raw":"---\ntitle: 開始做一個phaser遊戲！\ntags: phaser html5 canvas game \n---\n","slug":"game","published":0,"date":"2017-05-26T04:13:27.000Z","updated":"2017-05-26T04:13:27.000Z","_id":"cj35c1ufb000caf7xdh4rc6s0","comments":1,"layout":"post","photos":[],"link":"","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"curl PHP","_content":"\ncurl 是做不了跳板的，只系取得url裡面的內容。適合做api \n可以用來用get 和 post ， 把CURLOPT_POST設置成true 就是post\n\n\n\t\t$ch = curl_init();\n\t\tcurl_setopt($ch, CURLOPT_URL, \"http://SomeDomain/SamplePath\");\n\t\tcurl_setopt($ch, CURLOPT_POST, true); // 啟用POST\n\t\tcurl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query( array( \"a\"=>\"123\", \"b\"=>\"321\") )); \n\t\tcurl_setopt($ch, CURLOPT_SSLVERSION, 6);\n\t\t$result = curl_exec($ch);\n\t\tcurl_close($ch);\n\n裡面的\n\n\t\tcurl_setopt($ch, CURLOPT_SSLVERSION, 6);\n\n不一定要用到，不過有一次在一個server上無論如何也用不到curl,然後折騰半天,加了這個就成功了。\n\n如果加入\n\t\t\n\t\tcurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\n就會將結果存起來，不過直接輸出\n\n\n\n","source":"_drafts/curl.md","raw":"---\ntitle: curl PHP\ntags:\n---\n\ncurl 是做不了跳板的，只系取得url裡面的內容。適合做api \n可以用來用get 和 post ， 把CURLOPT_POST設置成true 就是post\n\n\n\t\t$ch = curl_init();\n\t\tcurl_setopt($ch, CURLOPT_URL, \"http://SomeDomain/SamplePath\");\n\t\tcurl_setopt($ch, CURLOPT_POST, true); // 啟用POST\n\t\tcurl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query( array( \"a\"=>\"123\", \"b\"=>\"321\") )); \n\t\tcurl_setopt($ch, CURLOPT_SSLVERSION, 6);\n\t\t$result = curl_exec($ch);\n\t\tcurl_close($ch);\n\n裡面的\n\n\t\tcurl_setopt($ch, CURLOPT_SSLVERSION, 6);\n\n不一定要用到，不過有一次在一個server上無論如何也用不到curl,然後折騰半天,加了這個就成功了。\n\n如果加入\n\t\t\n\t\tcurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\n就會將結果存起來，不過直接輸出\n\n\n\n","slug":"curl","published":0,"date":"2017-05-26T04:13:27.000Z","updated":"2017-05-26T04:13:27.000Z","_id":"cj35c1ufy000daf7x1et95zra","comments":1,"layout":"post","photos":[],"link":"","content":"<p>curl 是做不了跳板的，只系取得url裡面的內容。適合做api<br>可以用來用get 和 post ， 把CURLOPT_POST設置成true 就是post</p>\n<pre><code>$ch = curl_init();\ncurl_setopt($ch, CURLOPT_URL, &quot;http://SomeDomain/SamplePath&quot;);\ncurl_setopt($ch, CURLOPT_POST, true); // 啟用POST\ncurl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query( array( &quot;a&quot;=&gt;&quot;123&quot;, &quot;b&quot;=&gt;&quot;321&quot;) )); \ncurl_setopt($ch, CURLOPT_SSLVERSION, 6);\n$result = curl_exec($ch);\ncurl_close($ch);\n</code></pre><p>裡面的</p>\n<pre><code>curl_setopt($ch, CURLOPT_SSLVERSION, 6);\n</code></pre><p>不一定要用到，不過有一次在一個server上無論如何也用不到curl,然後折騰半天,加了這個就成功了。</p>\n<p>如果加入</p>\n<pre><code>curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n</code></pre><p>就會將結果存起來，不過直接輸出</p>\n","site":{"data":{}},"excerpt":"","more":"<p>curl 是做不了跳板的，只系取得url裡面的內容。適合做api<br>可以用來用get 和 post ， 把CURLOPT_POST設置成true 就是post</p>\n<pre><code>$ch = curl_init();\ncurl_setopt($ch, CURLOPT_URL, &quot;http://SomeDomain/SamplePath&quot;);\ncurl_setopt($ch, CURLOPT_POST, true); // 啟用POST\ncurl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query( array( &quot;a&quot;=&gt;&quot;123&quot;, &quot;b&quot;=&gt;&quot;321&quot;) )); \ncurl_setopt($ch, CURLOPT_SSLVERSION, 6);\n$result = curl_exec($ch);\ncurl_close($ch);\n</code></pre><p>裡面的</p>\n<pre><code>curl_setopt($ch, CURLOPT_SSLVERSION, 6);\n</code></pre><p>不一定要用到，不過有一次在一個server上無論如何也用不到curl,然後折騰半天,加了這個就成功了。</p>\n<p>如果加入</p>\n<pre><code>curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n</code></pre><p>就會將結果存起來，不過直接輸出</p>\n"},{"title":"Unity Move and Turn","_content":"\n在這裡記錄一下unity對一個rigidbody最簡單的move 跟 turn \n\n### Move \nmove 就是移動，這裡用的是 MovePosition， 官網是這樣寫的 \n\t\t\n\t\tpublic void MovePosition(Vector3 position);\n\nVector3是一個3D 的點，\n按照我的理解，就是直接給這個rigidbody一個新的位置，然後簡單粗暴地移動到新的位置，沒有考慮重力，摩擦摩擦等因素。\n舉一個栗子： \n\t\t\n\t\tfloat v = Input.GetAxis (\"Vertical\");\n\t\tVector3 movement = transform.forward * v * Speed * Time.deltaTime;\n        rigidbody.MovePosition(rigidbody.position + movement);\n\n這樣，這個rigidbody就會不停向前走\n\n\n### Turn\nturn  就是旋轉， 比移動要複雜一點點。 這裡用的是 MoveRotation， 同樣，官網是這樣寫的 \n\t\t\n\t\tpublic void MoveRotation(Quaternion rot);\n\n注意，這裡的參數系Quaternion, 中文是四元数（握草，什麼鬼）。\n要搞到這個Quaternion，我們要用unity 的 Quaternion.Euler 方法 \n\t\t\n\t\tQuaternion Euler(float x, float y, float z);\n\n##### Returns a rotation that rotates z degrees around the z axis, \n##### x degrees around the x axis, and y degrees around the y axis (in that order).\n這個function是傳入x,y,z三個 float ，輸出 Quaternion , 有了這個Quaternion之後就可以用來旋轉\n這個rigidbody 了，下面是例子：  \n\t\t\n\t\t\n\t\tfloat turn = Input.GetAxis (\"Horizontal\") * Speed * Time.deltaTime;\n\n\t\tQuaternion turnRotation = Quaternion.Euler (0f, turn, 0f);\n\n        rigidbody.MoveRotation (rigidbody.rotation * turnRotation);\n\n其實也可以直接這樣\n\n\t\trigidbody.rotation = turnRotation;\n\n因為rigidbody.rotation 本身就是一個 Quaternion。 \n\n\n如果想一個rigidbody 總是看著另一個rigidbody 就可以用 Quaternion.LookRotation(Vector3 forward, Vector3 upwards = Vector3.up)\n方法計算出一個Quaternion \n\n\tpublic static Quaternion LookRotation(Vector3 forward, Vector3 upwards = Vector3.up);\n\n或者更直接用 Transform.LookAt \n\t\n\tpublic void LookAt(Transform target, Vector3 worldUp = Vector3.up);\n\n\tpublic Transform target;\n    \n    void Update() {\n    \t// Rotate the camera every frame so it keeps looking at the target \n        transform.LookAt(target);\n    }\n\n\n上面就是對於一個 rigidbody的移動和旋轉的方法。\n\n\n### 這裡再稍微說一下 MovePosition 跟 Rigidbody.AddForce() 的區別\nMovePosition 是提供一個新的位置，讓rigidbody 從舊的位置去到新的位置，可以實現瞬移，跟物理學沒有半點關係 （瞬移根本就違反物理學， ps:這裡是2016年的物理學）\naddforce 是加一個力給這個rigidbody 讓它移動，像推它，踢它甚至爆炸的力，如果摩擦力為0，根據物理學，物體會一直運動， addforce 不能實現瞬移。 \n\n\n","source":"_drafts/UnityMoveAndTurn.md","raw":"---\ntitle: Unity Move and Turn \ntags: unity, C#\n---\n\n在這裡記錄一下unity對一個rigidbody最簡單的move 跟 turn \n\n### Move \nmove 就是移動，這裡用的是 MovePosition， 官網是這樣寫的 \n\t\t\n\t\tpublic void MovePosition(Vector3 position);\n\nVector3是一個3D 的點，\n按照我的理解，就是直接給這個rigidbody一個新的位置，然後簡單粗暴地移動到新的位置，沒有考慮重力，摩擦摩擦等因素。\n舉一個栗子： \n\t\t\n\t\tfloat v = Input.GetAxis (\"Vertical\");\n\t\tVector3 movement = transform.forward * v * Speed * Time.deltaTime;\n        rigidbody.MovePosition(rigidbody.position + movement);\n\n這樣，這個rigidbody就會不停向前走\n\n\n### Turn\nturn  就是旋轉， 比移動要複雜一點點。 這裡用的是 MoveRotation， 同樣，官網是這樣寫的 \n\t\t\n\t\tpublic void MoveRotation(Quaternion rot);\n\n注意，這裡的參數系Quaternion, 中文是四元数（握草，什麼鬼）。\n要搞到這個Quaternion，我們要用unity 的 Quaternion.Euler 方法 \n\t\t\n\t\tQuaternion Euler(float x, float y, float z);\n\n##### Returns a rotation that rotates z degrees around the z axis, \n##### x degrees around the x axis, and y degrees around the y axis (in that order).\n這個function是傳入x,y,z三個 float ，輸出 Quaternion , 有了這個Quaternion之後就可以用來旋轉\n這個rigidbody 了，下面是例子：  \n\t\t\n\t\t\n\t\tfloat turn = Input.GetAxis (\"Horizontal\") * Speed * Time.deltaTime;\n\n\t\tQuaternion turnRotation = Quaternion.Euler (0f, turn, 0f);\n\n        rigidbody.MoveRotation (rigidbody.rotation * turnRotation);\n\n其實也可以直接這樣\n\n\t\trigidbody.rotation = turnRotation;\n\n因為rigidbody.rotation 本身就是一個 Quaternion。 \n\n\n如果想一個rigidbody 總是看著另一個rigidbody 就可以用 Quaternion.LookRotation(Vector3 forward, Vector3 upwards = Vector3.up)\n方法計算出一個Quaternion \n\n\tpublic static Quaternion LookRotation(Vector3 forward, Vector3 upwards = Vector3.up);\n\n或者更直接用 Transform.LookAt \n\t\n\tpublic void LookAt(Transform target, Vector3 worldUp = Vector3.up);\n\n\tpublic Transform target;\n    \n    void Update() {\n    \t// Rotate the camera every frame so it keeps looking at the target \n        transform.LookAt(target);\n    }\n\n\n上面就是對於一個 rigidbody的移動和旋轉的方法。\n\n\n### 這裡再稍微說一下 MovePosition 跟 Rigidbody.AddForce() 的區別\nMovePosition 是提供一個新的位置，讓rigidbody 從舊的位置去到新的位置，可以實現瞬移，跟物理學沒有半點關係 （瞬移根本就違反物理學， ps:這裡是2016年的物理學）\naddforce 是加一個力給這個rigidbody 讓它移動，像推它，踢它甚至爆炸的力，如果摩擦力為0，根據物理學，物體會一直運動， addforce 不能實現瞬移。 \n\n\n","slug":"UnityMoveAndTurn","published":0,"date":"2017-05-26T04:13:27.000Z","updated":"2017-05-26T04:13:27.000Z","_id":"cj35c1ug0000faf7x5twhedew","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在這裡記錄一下unity對一個rigidbody最簡單的move 跟 turn </p>\n<h3 id=\"Move\"><a href=\"#Move\" class=\"headerlink\" title=\"Move\"></a>Move</h3><p>move 就是移動，這裡用的是 MovePosition， 官網是這樣寫的 </p>\n<pre><code>public void MovePosition(Vector3 position);\n</code></pre><p>Vector3是一個3D 的點，<br>按照我的理解，就是直接給這個rigidbody一個新的位置，然後簡單粗暴地移動到新的位置，沒有考慮重力，摩擦摩擦等因素。<br>舉一個栗子： </p>\n<pre><code>float v = Input.GetAxis (&quot;Vertical&quot;);\nVector3 movement = transform.forward * v * Speed * Time.deltaTime;\nrigidbody.MovePosition(rigidbody.position + movement);\n</code></pre><p>這樣，這個rigidbody就會不停向前走</p>\n<h3 id=\"Turn\"><a href=\"#Turn\" class=\"headerlink\" title=\"Turn\"></a>Turn</h3><p>turn  就是旋轉， 比移動要複雜一點點。 這裡用的是 MoveRotation， 同樣，官網是這樣寫的 </p>\n<pre><code>public void MoveRotation(Quaternion rot);\n</code></pre><p>注意，這裡的參數系Quaternion, 中文是四元数（握草，什麼鬼）。<br>要搞到這個Quaternion，我們要用unity 的 Quaternion.Euler 方法 </p>\n<pre><code>Quaternion Euler(float x, float y, float z);\n</code></pre><h5 id=\"Returns-a-rotation-that-rotates-z-degrees-around-the-z-axis\"><a href=\"#Returns-a-rotation-that-rotates-z-degrees-around-the-z-axis\" class=\"headerlink\" title=\"Returns a rotation that rotates z degrees around the z axis,\"></a>Returns a rotation that rotates z degrees around the z axis,</h5><h5 id=\"x-degrees-around-the-x-axis-and-y-degrees-around-the-y-axis-in-that-order\"><a href=\"#x-degrees-around-the-x-axis-and-y-degrees-around-the-y-axis-in-that-order\" class=\"headerlink\" title=\"x degrees around the x axis, and y degrees around the y axis (in that order).\"></a>x degrees around the x axis, and y degrees around the y axis (in that order).</h5><p>這個function是傳入x,y,z三個 float ，輸出 Quaternion , 有了這個Quaternion之後就可以用來旋轉<br>這個rigidbody 了，下面是例子：  </p>\n<pre><code>float turn = Input.GetAxis (&quot;Horizontal&quot;) * Speed * Time.deltaTime;\n\nQuaternion turnRotation = Quaternion.Euler (0f, turn, 0f);\n\nrigidbody.MoveRotation (rigidbody.rotation * turnRotation);\n</code></pre><p>其實也可以直接這樣</p>\n<pre><code>rigidbody.rotation = turnRotation;\n</code></pre><p>因為rigidbody.rotation 本身就是一個 Quaternion。 </p>\n<p>如果想一個rigidbody 總是看著另一個rigidbody 就可以用 Quaternion.LookRotation(Vector3 forward, Vector3 upwards = Vector3.up)<br>方法計算出一個Quaternion </p>\n<pre><code>public static Quaternion LookRotation(Vector3 forward, Vector3 upwards = Vector3.up);\n</code></pre><p>或者更直接用 Transform.LookAt </p>\n<pre><code>public void LookAt(Transform target, Vector3 worldUp = Vector3.up);\n\npublic Transform target;\n\nvoid Update() {\n    // Rotate the camera every frame so it keeps looking at the target \n    transform.LookAt(target);\n}\n</code></pre><p>上面就是對於一個 rigidbody的移動和旋轉的方法。</p>\n<h3 id=\"這裡再稍微說一下-MovePosition-跟-Rigidbody-AddForce-的區別\"><a href=\"#這裡再稍微說一下-MovePosition-跟-Rigidbody-AddForce-的區別\" class=\"headerlink\" title=\"這裡再稍微說一下 MovePosition 跟 Rigidbody.AddForce() 的區別\"></a>這裡再稍微說一下 MovePosition 跟 Rigidbody.AddForce() 的區別</h3><p>MovePosition 是提供一個新的位置，讓rigidbody 從舊的位置去到新的位置，可以實現瞬移，跟物理學沒有半點關係 （瞬移根本就違反物理學， ps:這裡是2016年的物理學）<br>addforce 是加一個力給這個rigidbody 讓它移動，像推它，踢它甚至爆炸的力，如果摩擦力為0，根據物理學，物體會一直運動， addforce 不能實現瞬移。 </p>\n","site":{"data":{}},"excerpt":"","more":"<p>在這裡記錄一下unity對一個rigidbody最簡單的move 跟 turn </p>\n<h3 id=\"Move\"><a href=\"#Move\" class=\"headerlink\" title=\"Move\"></a>Move</h3><p>move 就是移動，這裡用的是 MovePosition， 官網是這樣寫的 </p>\n<pre><code>public void MovePosition(Vector3 position);\n</code></pre><p>Vector3是一個3D 的點，<br>按照我的理解，就是直接給這個rigidbody一個新的位置，然後簡單粗暴地移動到新的位置，沒有考慮重力，摩擦摩擦等因素。<br>舉一個栗子： </p>\n<pre><code>float v = Input.GetAxis (&quot;Vertical&quot;);\nVector3 movement = transform.forward * v * Speed * Time.deltaTime;\nrigidbody.MovePosition(rigidbody.position + movement);\n</code></pre><p>這樣，這個rigidbody就會不停向前走</p>\n<h3 id=\"Turn\"><a href=\"#Turn\" class=\"headerlink\" title=\"Turn\"></a>Turn</h3><p>turn  就是旋轉， 比移動要複雜一點點。 這裡用的是 MoveRotation， 同樣，官網是這樣寫的 </p>\n<pre><code>public void MoveRotation(Quaternion rot);\n</code></pre><p>注意，這裡的參數系Quaternion, 中文是四元数（握草，什麼鬼）。<br>要搞到這個Quaternion，我們要用unity 的 Quaternion.Euler 方法 </p>\n<pre><code>Quaternion Euler(float x, float y, float z);\n</code></pre><h5 id=\"Returns-a-rotation-that-rotates-z-degrees-around-the-z-axis\"><a href=\"#Returns-a-rotation-that-rotates-z-degrees-around-the-z-axis\" class=\"headerlink\" title=\"Returns a rotation that rotates z degrees around the z axis,\"></a>Returns a rotation that rotates z degrees around the z axis,</h5><h5 id=\"x-degrees-around-the-x-axis-and-y-degrees-around-the-y-axis-in-that-order\"><a href=\"#x-degrees-around-the-x-axis-and-y-degrees-around-the-y-axis-in-that-order\" class=\"headerlink\" title=\"x degrees around the x axis, and y degrees around the y axis (in that order).\"></a>x degrees around the x axis, and y degrees around the y axis (in that order).</h5><p>這個function是傳入x,y,z三個 float ，輸出 Quaternion , 有了這個Quaternion之後就可以用來旋轉<br>這個rigidbody 了，下面是例子：  </p>\n<pre><code>float turn = Input.GetAxis (&quot;Horizontal&quot;) * Speed * Time.deltaTime;\n\nQuaternion turnRotation = Quaternion.Euler (0f, turn, 0f);\n\nrigidbody.MoveRotation (rigidbody.rotation * turnRotation);\n</code></pre><p>其實也可以直接這樣</p>\n<pre><code>rigidbody.rotation = turnRotation;\n</code></pre><p>因為rigidbody.rotation 本身就是一個 Quaternion。 </p>\n<p>如果想一個rigidbody 總是看著另一個rigidbody 就可以用 Quaternion.LookRotation(Vector3 forward, Vector3 upwards = Vector3.up)<br>方法計算出一個Quaternion </p>\n<pre><code>public static Quaternion LookRotation(Vector3 forward, Vector3 upwards = Vector3.up);\n</code></pre><p>或者更直接用 Transform.LookAt </p>\n<pre><code>public void LookAt(Transform target, Vector3 worldUp = Vector3.up);\n\npublic Transform target;\n\nvoid Update() {\n    // Rotate the camera every frame so it keeps looking at the target \n    transform.LookAt(target);\n}\n</code></pre><p>上面就是對於一個 rigidbody的移動和旋轉的方法。</p>\n<h3 id=\"這裡再稍微說一下-MovePosition-跟-Rigidbody-AddForce-的區別\"><a href=\"#這裡再稍微說一下-MovePosition-跟-Rigidbody-AddForce-的區別\" class=\"headerlink\" title=\"這裡再稍微說一下 MovePosition 跟 Rigidbody.AddForce() 的區別\"></a>這裡再稍微說一下 MovePosition 跟 Rigidbody.AddForce() 的區別</h3><p>MovePosition 是提供一個新的位置，讓rigidbody 從舊的位置去到新的位置，可以實現瞬移，跟物理學沒有半點關係 （瞬移根本就違反物理學， ps:這裡是2016年的物理學）<br>addforce 是加一個力給這個rigidbody 讓它移動，像推它，踢它甚至爆炸的力，如果摩擦力為0，根據物理學，物體會一直運動， addforce 不能實現瞬移。 </p>\n"},{"title":"paypal API","date":"2016-10-07T09:34:27.000Z","_content":"\n## 這裡記錄一下 paypal 的 API, 讓以後需要用到的時候可以查到。\n\n#### <span style=\"color:#83adef\">(因為我寫這篇blog的時候已經距離研究這個api的時候有一段日子了，所以我不一定下面的做法都是對的)</span>\n\npaypal 有3種比較常用的api 方法 \n* **REST Api**\n* **NVP Api**\n* **HTML**\n\n---\n\n### REST :\n這裡先說流程\n\n\n代碼最重要:\n\n*這是取得token的方法*\n\n\n\t\tpublic function gettoken()\n\t\t{\n\n\n\t\t\t$ch = curl_init();\n\t\t\t$clientId = \"your client id\";\n\t\t\t$secret = \"your secret\";\n\n\t\t\tcurl_setopt($ch, CURLOPT_URL, \"https://api.sandbox.paypal.com/v1/oauth2/token\");\n\t\t\tcurl_setopt($ch, CURLOPT_HEADER, false);\n\t\t\tcurl_setopt($ch, CURLOPT_SSL_VERIFYHOST,0);\n\t\t\tcurl_setopt($ch, CURLOPT_SSL_VERIFYPEER,0);\n\t\t\tcurl_setopt($ch, CURLOPT_POST, true);\n\t\t\tcurl_setopt($ch, CURLOPT_RETURNTRANSFER, true); \n\t\t\tcurl_setopt($ch, CURLOPT_USERPWD, $clientId.\":\".$secret);\n\t\t\tcurl_setopt($ch, CURLOPT_POSTFIELDS, \"grant_type=client_credentials\");\n\t\t\tcurl_setopt($ch, CURLOPT_SSLVERSION, 6);\n\n\t\t\t$result = curl_exec($ch);\n\n\t\t\tif(empty($result))die(curl_error($ch));\n\t\t\telse\n\t\t\t{\n\t\t\t\t$json = json_decode($result);\n\n\t\t\t\t$return  =  $json->access_token;\n\t\t\t}\n\n\t\t\tcurl_close($ch);\n\t\t\treturn $return;\n\n\t\t}\n\n---\n*拿到token后就可以創建一個payment*\n\n\n\n\t\tpublic function rest_api(){\n\t\t\t$token = $this->gettoken();\n\t\t\t$payment_json = '{\n\t\t\t\t\"intent\": \"sale\",\n\t\t\t\t\"payer\": {\n\t\t\t\t\t\"payment_method\": \"paypal\"\n\t\t\t\t},\n\t\t\t\t\"redirect_urls\": {\n\t\t\t\t\t\"return_url\": \"http://return_URL_here\",\n\t\t\t\t\t\"cancel_url\": \"http://cancel_URL_here\"\n\t\t\t\t},\n\t\t\t\t\"transactions\": [\n\t\t\t\t{\n\t\t\t\t\t\"amount\": {\n\t\t\t\t\t\t\"total\": \"8.00\",\n\t\t\t\t\t\t\"currency\": \"HKD\",\n\t\t\t\t\t\t\"details\": {\n\t\t\t\t\t\t\t\"subtotal\": \"6.00\",\n\t\t\t\t\t\t\t\"tax\": \"1.00\",\n\t\t\t\t\t\t\t\"shipping\": \"1.00\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"This is payment description.\",\n\t\t\t\t\t\"item_list\": { \n\t\t\t\t\t\t\"items\":[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"quantity\":\"3\", \n\t\t\t\t\t\t\t\"name\":\"Hat\", \n\t\t\t\t\t\t\t\"price\":\"2.00\",  \n\t\t\t\t\t\t\t\"sku\":\"product12345\", \n\t\t\t\t\t\t\t\"currency\":\"HKD\"\n\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t]\n\t\t\t}';\n\n\n\t\t\t$ch = curl_init();\n\n\t\t\tcurl_setopt($ch, CURLOPT_URL, \"https://api.sandbox.paypal.com/v1/payments/payment\");\n\t\t\tcurl_setopt($ch, CURLOPT_HEADER, false);\n\t\t\tcurl_setopt($ch, CURLOPT_SSL_VERIFYHOST,0);\n\t\t\tcurl_setopt($ch, CURLOPT_SSL_VERIFYPEER,0);\n\t\t\tcurl_setopt($ch, CURLOPT_POST, true);\n\t\t\tcurl_setopt($ch, CURLOPT_RETURNTRANSFER, true); \n\t\t\tcurl_setopt($ch, CURLOPT_HTTPHEADER, array(\n\t\t\t\t'Authorization: Bearer '.$token,\n\t\t\t\t'Accept: application/json',\n\t\t\t\t'Content-Type: application/json'\n\t\t\t\t));\n\t\t\tcurl_setopt($ch, CURLOPT_POSTFIELDS, $payment_json);\n\t\t\tcurl_setopt($ch, CURLOPT_SSLVERSION, 6);\n\n\t\t\t$result = curl_exec($ch);\n\t\t\tcurl_close($ch);\n\t\t\t\n\t\t\t$array = json_decode($result);\n\t\t\t// var_dump($array);\n\t\t\t$redirect_urls = $array->links['1']->href;\n\t\t\theader(\"location: \".$redirect_urls); \n\n\t\t}\n\n裡面的 \n\t\t\n\t\t$token = $this->gettoken();\n\n就是用了上面的 get token 方法取的那個token \n\n其中 \n\n\t\t$redirect_urls = $array->links['1']->href;\n\n\n這裡會因為創建這個payment 之後 paypal 會 return 一串 json 來， 其中包括大概這樣子的東西： \n\t\t\n\t\t\"links\":[\n\t    {\n\t      \"href\":\"https://api.sandbox.paypal.com/v1/payments/payment/PAY-6RV70583SB702805EKEYSZ6Y\",\n\t      \"rel\":\"self\",\n\t      \"method\":\"GET\"\n\t    },\n\t    {\n\t      \"href\":\"https://www.sandbox.paypal.com/webscr?cmd=_express-checkout&token=EC-60U79048BN7719609\",\n\t      \"rel\":\"approval_url\",\n\t      \"method\":\"REDIRECT\"\n\t    },\n\t    {\n\t      \"href\":\"https://api.sandbox.paypal.com/v1/payments/payment/PAY-6RV70583SB702805EKEYSZ6Y/execute\",\n\t      \"rel\":\"execute\",\n\t      \"method\":\"POST\"\n\t    }\n\t  \t]\n\n一個 \"link\" 的array. 我們要的就是中間的  https://www.sandbox.paypal.com/webscr?cmd=_express-checkout&token=EC-60U79048BN7719609\n然後我們用 \n\n\t\theader(\"location: \".$redirect_urls); \n\n跳到這里，這時候其實就去了付款的頁面了. \n\n#### <span style=\"color:#83adef\">(我寫這篇文章的時候，paypal正在換付款的layout，所以有些人看到會是新的界面，有些人看到舊的界面。這個是要看臉的)</span>\n\n在付款的頁面, 買家就會付款購買，然後會跳轉會你之前set的那個return_url里的link,\n當然如果買家不買了cancel了,就會跳轉到cancel_url的link里。\n\n<!-- ![GitHub Logo](/images/1.png) -->\n\n### NVP API :\nnvp api 需要用到 username , password , 和 signature \n這三個東西在這裡搞 \nhttps://developer.paypal.com/docs/classic/api/apiCredentials/ \n\n\n\t\tpublic function nvp_api($amount,$custom)\n\t\t{\n\t\t\t$nvp = array(\n\t\t\t\t    'LOCALECODE'                        => 'zh_HK',\n\t\t\t\t    'PAYMENTREQUEST_0_PAYMENTACTION'\t=> 'Sale',\n\t\t\t\t    'PAYMENTREQUEST_0_AMT'              => $amount,\n\t\t\t\t    'PAYMENTREQUEST_0_CURRENCYCODE'     => 'HKD', \n\t\t\t\t    'PAYMENTREQUEST_0_ITEMAMT'          => $amount,\n\t\t\t\t    'PAYMENTREQUEST_0_CUSTOM'\t\t\t=> $custom,\n\t\t\t\t    'L_PAYMENTREQUEST_0_NAME0'          => 'payment name here',\n\t\t\t\t    'L_PAYMENTREQUEST_0_DESC0'          => 'payment description here',\n\t\t\t\t    'L_PAYMENTREQUEST_0_AMT0'           => $amount,\n\t\t\t\t\t\n\t\t\t\t    'RETURNURL'                         => return url here,\n\t\t\t\t    'CANCELURL'\t\t\t\t=> cancel url here,\n\t\t\t\t    'METHOD'\t\t\t\t=> 'SetExpressCheckout',\n\t\t\t\t    'VERSION'\t\t\t\t=> '124',\n\t\t\t\t    'PAYMENTREQUEST_0_SHIPTOSTATE'      => '1', \n\t\t\t\t    'PWD'\t\t\t\t=> 'your password',\n\t\t\t\t    'USER'\t\t\t\t=> 'your user',\n\t\t\t\t    'SIGNATURE'\t\t\t=> 'your signature' \n\t\t\t);\n\n\t\t\t\t$curl = curl_init();\n\t\t\t\tcurl_setopt( $curl , CURLOPT_URL , 'https://api-3t.sandbox.paypal.com/nvp' );\n\t\t\t\tcurl_setopt( $curl , CURLOPT_SSL_VERIFYPEER , false );\n\t\t\t\tcurl_setopt($curl, CURLOPT_SSLVERSION, 6);\n\t\t\t\tcurl_setopt( $curl , CURLOPT_RETURNTRANSFER , 1 );\n\t\t\t\tcurl_setopt( $curl , CURLOPT_POST , 1 );\n\t\t\t\tcurl_setopt( $curl , CURLOPT_POSTFIELDS , http_build_query( $nvp ) );\n\t\t\t\t$response = urldecode( curl_exec( $curl ) );\n\t\t\t\tcurl_close( $curl );\n\t\t\t\t$responseNvp = array();\n\t\t\t\tif ( preg_match_all( '/(?<name>[^\\=]+)\\=(?<value>[^&]+)&?/' , $response , $matches ) ) {\n\t\t\t\t\tforeach ( $matches[ 'name' ] as $offset => $name ) {\n\t\t\t\t\t\t$responseNvp[ $name ] = $matches[ 'value' ][ $offset ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( isset( $responseNvp[ 'ACK' ] ) && $responseNvp[ 'ACK' ] == 'Success' ) {\n\t\t\t\t\t$paypalURL = 'https://www.sandbox.paypal.com/br/cgi-bin/webscr';\n\t\t\t\t\t$query = array(\n\t\t\t\t\t\t'cmd'\t=> '_express-checkout',\n\t\t\t\t\t\t'useraction' => 'commit', \n\t\t\t\t\t\t'token'\t=> $responseNvp[ 'TOKEN' ]\n\t\t\t\t\t);\n\t\t\t\t \t\n\t\t\t\t \t $paypal_link  =  $paypalURL . '?' . http_build_query( $query );\n\t\t\t\t\t\n\t\t\t\t} \n\t\t\t\t\t\n\n\t\t\t\theader(\"location: \".$paypal_link);\n\t\t\t\n\t\t}","source":"_drafts/paypal-api.md","raw":"---\ntitle: paypal API\ndate: 2016-10-07 17:34:27\ntags:\n\n---\n\n## 這裡記錄一下 paypal 的 API, 讓以後需要用到的時候可以查到。\n\n#### <span style=\"color:#83adef\">(因為我寫這篇blog的時候已經距離研究這個api的時候有一段日子了，所以我不一定下面的做法都是對的)</span>\n\npaypal 有3種比較常用的api 方法 \n* **REST Api**\n* **NVP Api**\n* **HTML**\n\n---\n\n### REST :\n這裡先說流程\n\n\n代碼最重要:\n\n*這是取得token的方法*\n\n\n\t\tpublic function gettoken()\n\t\t{\n\n\n\t\t\t$ch = curl_init();\n\t\t\t$clientId = \"your client id\";\n\t\t\t$secret = \"your secret\";\n\n\t\t\tcurl_setopt($ch, CURLOPT_URL, \"https://api.sandbox.paypal.com/v1/oauth2/token\");\n\t\t\tcurl_setopt($ch, CURLOPT_HEADER, false);\n\t\t\tcurl_setopt($ch, CURLOPT_SSL_VERIFYHOST,0);\n\t\t\tcurl_setopt($ch, CURLOPT_SSL_VERIFYPEER,0);\n\t\t\tcurl_setopt($ch, CURLOPT_POST, true);\n\t\t\tcurl_setopt($ch, CURLOPT_RETURNTRANSFER, true); \n\t\t\tcurl_setopt($ch, CURLOPT_USERPWD, $clientId.\":\".$secret);\n\t\t\tcurl_setopt($ch, CURLOPT_POSTFIELDS, \"grant_type=client_credentials\");\n\t\t\tcurl_setopt($ch, CURLOPT_SSLVERSION, 6);\n\n\t\t\t$result = curl_exec($ch);\n\n\t\t\tif(empty($result))die(curl_error($ch));\n\t\t\telse\n\t\t\t{\n\t\t\t\t$json = json_decode($result);\n\n\t\t\t\t$return  =  $json->access_token;\n\t\t\t}\n\n\t\t\tcurl_close($ch);\n\t\t\treturn $return;\n\n\t\t}\n\n---\n*拿到token后就可以創建一個payment*\n\n\n\n\t\tpublic function rest_api(){\n\t\t\t$token = $this->gettoken();\n\t\t\t$payment_json = '{\n\t\t\t\t\"intent\": \"sale\",\n\t\t\t\t\"payer\": {\n\t\t\t\t\t\"payment_method\": \"paypal\"\n\t\t\t\t},\n\t\t\t\t\"redirect_urls\": {\n\t\t\t\t\t\"return_url\": \"http://return_URL_here\",\n\t\t\t\t\t\"cancel_url\": \"http://cancel_URL_here\"\n\t\t\t\t},\n\t\t\t\t\"transactions\": [\n\t\t\t\t{\n\t\t\t\t\t\"amount\": {\n\t\t\t\t\t\t\"total\": \"8.00\",\n\t\t\t\t\t\t\"currency\": \"HKD\",\n\t\t\t\t\t\t\"details\": {\n\t\t\t\t\t\t\t\"subtotal\": \"6.00\",\n\t\t\t\t\t\t\t\"tax\": \"1.00\",\n\t\t\t\t\t\t\t\"shipping\": \"1.00\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"This is payment description.\",\n\t\t\t\t\t\"item_list\": { \n\t\t\t\t\t\t\"items\":[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"quantity\":\"3\", \n\t\t\t\t\t\t\t\"name\":\"Hat\", \n\t\t\t\t\t\t\t\"price\":\"2.00\",  \n\t\t\t\t\t\t\t\"sku\":\"product12345\", \n\t\t\t\t\t\t\t\"currency\":\"HKD\"\n\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t]\n\t\t\t}';\n\n\n\t\t\t$ch = curl_init();\n\n\t\t\tcurl_setopt($ch, CURLOPT_URL, \"https://api.sandbox.paypal.com/v1/payments/payment\");\n\t\t\tcurl_setopt($ch, CURLOPT_HEADER, false);\n\t\t\tcurl_setopt($ch, CURLOPT_SSL_VERIFYHOST,0);\n\t\t\tcurl_setopt($ch, CURLOPT_SSL_VERIFYPEER,0);\n\t\t\tcurl_setopt($ch, CURLOPT_POST, true);\n\t\t\tcurl_setopt($ch, CURLOPT_RETURNTRANSFER, true); \n\t\t\tcurl_setopt($ch, CURLOPT_HTTPHEADER, array(\n\t\t\t\t'Authorization: Bearer '.$token,\n\t\t\t\t'Accept: application/json',\n\t\t\t\t'Content-Type: application/json'\n\t\t\t\t));\n\t\t\tcurl_setopt($ch, CURLOPT_POSTFIELDS, $payment_json);\n\t\t\tcurl_setopt($ch, CURLOPT_SSLVERSION, 6);\n\n\t\t\t$result = curl_exec($ch);\n\t\t\tcurl_close($ch);\n\t\t\t\n\t\t\t$array = json_decode($result);\n\t\t\t// var_dump($array);\n\t\t\t$redirect_urls = $array->links['1']->href;\n\t\t\theader(\"location: \".$redirect_urls); \n\n\t\t}\n\n裡面的 \n\t\t\n\t\t$token = $this->gettoken();\n\n就是用了上面的 get token 方法取的那個token \n\n其中 \n\n\t\t$redirect_urls = $array->links['1']->href;\n\n\n這裡會因為創建這個payment 之後 paypal 會 return 一串 json 來， 其中包括大概這樣子的東西： \n\t\t\n\t\t\"links\":[\n\t    {\n\t      \"href\":\"https://api.sandbox.paypal.com/v1/payments/payment/PAY-6RV70583SB702805EKEYSZ6Y\",\n\t      \"rel\":\"self\",\n\t      \"method\":\"GET\"\n\t    },\n\t    {\n\t      \"href\":\"https://www.sandbox.paypal.com/webscr?cmd=_express-checkout&token=EC-60U79048BN7719609\",\n\t      \"rel\":\"approval_url\",\n\t      \"method\":\"REDIRECT\"\n\t    },\n\t    {\n\t      \"href\":\"https://api.sandbox.paypal.com/v1/payments/payment/PAY-6RV70583SB702805EKEYSZ6Y/execute\",\n\t      \"rel\":\"execute\",\n\t      \"method\":\"POST\"\n\t    }\n\t  \t]\n\n一個 \"link\" 的array. 我們要的就是中間的  https://www.sandbox.paypal.com/webscr?cmd=_express-checkout&token=EC-60U79048BN7719609\n然後我們用 \n\n\t\theader(\"location: \".$redirect_urls); \n\n跳到這里，這時候其實就去了付款的頁面了. \n\n#### <span style=\"color:#83adef\">(我寫這篇文章的時候，paypal正在換付款的layout，所以有些人看到會是新的界面，有些人看到舊的界面。這個是要看臉的)</span>\n\n在付款的頁面, 買家就會付款購買，然後會跳轉會你之前set的那個return_url里的link,\n當然如果買家不買了cancel了,就會跳轉到cancel_url的link里。\n\n<!-- ![GitHub Logo](/images/1.png) -->\n\n### NVP API :\nnvp api 需要用到 username , password , 和 signature \n這三個東西在這裡搞 \nhttps://developer.paypal.com/docs/classic/api/apiCredentials/ \n\n\n\t\tpublic function nvp_api($amount,$custom)\n\t\t{\n\t\t\t$nvp = array(\n\t\t\t\t    'LOCALECODE'                        => 'zh_HK',\n\t\t\t\t    'PAYMENTREQUEST_0_PAYMENTACTION'\t=> 'Sale',\n\t\t\t\t    'PAYMENTREQUEST_0_AMT'              => $amount,\n\t\t\t\t    'PAYMENTREQUEST_0_CURRENCYCODE'     => 'HKD', \n\t\t\t\t    'PAYMENTREQUEST_0_ITEMAMT'          => $amount,\n\t\t\t\t    'PAYMENTREQUEST_0_CUSTOM'\t\t\t=> $custom,\n\t\t\t\t    'L_PAYMENTREQUEST_0_NAME0'          => 'payment name here',\n\t\t\t\t    'L_PAYMENTREQUEST_0_DESC0'          => 'payment description here',\n\t\t\t\t    'L_PAYMENTREQUEST_0_AMT0'           => $amount,\n\t\t\t\t\t\n\t\t\t\t    'RETURNURL'                         => return url here,\n\t\t\t\t    'CANCELURL'\t\t\t\t=> cancel url here,\n\t\t\t\t    'METHOD'\t\t\t\t=> 'SetExpressCheckout',\n\t\t\t\t    'VERSION'\t\t\t\t=> '124',\n\t\t\t\t    'PAYMENTREQUEST_0_SHIPTOSTATE'      => '1', \n\t\t\t\t    'PWD'\t\t\t\t=> 'your password',\n\t\t\t\t    'USER'\t\t\t\t=> 'your user',\n\t\t\t\t    'SIGNATURE'\t\t\t=> 'your signature' \n\t\t\t);\n\n\t\t\t\t$curl = curl_init();\n\t\t\t\tcurl_setopt( $curl , CURLOPT_URL , 'https://api-3t.sandbox.paypal.com/nvp' );\n\t\t\t\tcurl_setopt( $curl , CURLOPT_SSL_VERIFYPEER , false );\n\t\t\t\tcurl_setopt($curl, CURLOPT_SSLVERSION, 6);\n\t\t\t\tcurl_setopt( $curl , CURLOPT_RETURNTRANSFER , 1 );\n\t\t\t\tcurl_setopt( $curl , CURLOPT_POST , 1 );\n\t\t\t\tcurl_setopt( $curl , CURLOPT_POSTFIELDS , http_build_query( $nvp ) );\n\t\t\t\t$response = urldecode( curl_exec( $curl ) );\n\t\t\t\tcurl_close( $curl );\n\t\t\t\t$responseNvp = array();\n\t\t\t\tif ( preg_match_all( '/(?<name>[^\\=]+)\\=(?<value>[^&]+)&?/' , $response , $matches ) ) {\n\t\t\t\t\tforeach ( $matches[ 'name' ] as $offset => $name ) {\n\t\t\t\t\t\t$responseNvp[ $name ] = $matches[ 'value' ][ $offset ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( isset( $responseNvp[ 'ACK' ] ) && $responseNvp[ 'ACK' ] == 'Success' ) {\n\t\t\t\t\t$paypalURL = 'https://www.sandbox.paypal.com/br/cgi-bin/webscr';\n\t\t\t\t\t$query = array(\n\t\t\t\t\t\t'cmd'\t=> '_express-checkout',\n\t\t\t\t\t\t'useraction' => 'commit', \n\t\t\t\t\t\t'token'\t=> $responseNvp[ 'TOKEN' ]\n\t\t\t\t\t);\n\t\t\t\t \t\n\t\t\t\t \t $paypal_link  =  $paypalURL . '?' . http_build_query( $query );\n\t\t\t\t\t\n\t\t\t\t} \n\t\t\t\t\t\n\n\t\t\t\theader(\"location: \".$paypal_link);\n\t\t\t\n\t\t}","slug":"paypal-api","published":0,"updated":"2017-05-26T04:13:27.000Z","_id":"cj35c1ug2000gaf7xx9iz7i68","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"這裡記錄一下-paypal-的-API-讓以後需要用到的時候可以查到。\"><a href=\"#這裡記錄一下-paypal-的-API-讓以後需要用到的時候可以查到。\" class=\"headerlink\" title=\"這裡記錄一下 paypal 的 API, 讓以後需要用到的時候可以查到。\"></a>這裡記錄一下 paypal 的 API, 讓以後需要用到的時候可以查到。</h2><h4 id=\"因為我寫這篇blog的時候已經距離研究這個api的時候有一段日子了，所以我不一定下面的做法都是對的\"><a href=\"#因為我寫這篇blog的時候已經距離研究這個api的時候有一段日子了，所以我不一定下面的做法都是對的\" class=\"headerlink\" title=\"(因為我寫這篇blog的時候已經距離研究這個api的時候有一段日子了，所以我不一定下面的做法都是對的)\"></a><span style=\"color:#83adef\">(因為我寫這篇blog的時候已經距離研究這個api的時候有一段日子了，所以我不一定下面的做法都是對的)</span></h4><p>paypal 有3種比較常用的api 方法 </p>\n<ul>\n<li><strong>REST Api</strong></li>\n<li><strong>NVP Api</strong></li>\n<li><strong>HTML</strong></li>\n</ul>\n<hr>\n<h3 id=\"REST\"><a href=\"#REST\" class=\"headerlink\" title=\"REST :\"></a>REST :</h3><p>這裡先說流程</p>\n<p>代碼最重要:</p>\n<p><em>這是取得token的方法</em></p>\n<pre><code>public function gettoken()\n{\n\n\n    $ch = curl_init();\n    $clientId = &quot;your client id&quot;;\n    $secret = &quot;your secret&quot;;\n\n    curl_setopt($ch, CURLOPT_URL, &quot;https://api.sandbox.paypal.com/v1/oauth2/token&quot;);\n    curl_setopt($ch, CURLOPT_HEADER, false);\n    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST,0);\n    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER,0);\n    curl_setopt($ch, CURLOPT_POST, true);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); \n    curl_setopt($ch, CURLOPT_USERPWD, $clientId.&quot;:&quot;.$secret);\n    curl_setopt($ch, CURLOPT_POSTFIELDS, &quot;grant_type=client_credentials&quot;);\n    curl_setopt($ch, CURLOPT_SSLVERSION, 6);\n\n    $result = curl_exec($ch);\n\n    if(empty($result))die(curl_error($ch));\n    else\n    {\n        $json = json_decode($result);\n\n        $return  =  $json-&gt;access_token;\n    }\n\n    curl_close($ch);\n    return $return;\n\n}\n</code></pre><hr>\n<p><em>拿到token后就可以創建一個payment</em></p>\n<pre><code>public function rest_api(){\n    $token = $this-&gt;gettoken();\n    $payment_json = &apos;{\n        &quot;intent&quot;: &quot;sale&quot;,\n        &quot;payer&quot;: {\n            &quot;payment_method&quot;: &quot;paypal&quot;\n        },\n        &quot;redirect_urls&quot;: {\n            &quot;return_url&quot;: &quot;http://return_URL_here&quot;,\n            &quot;cancel_url&quot;: &quot;http://cancel_URL_here&quot;\n        },\n        &quot;transactions&quot;: [\n        {\n            &quot;amount&quot;: {\n                &quot;total&quot;: &quot;8.00&quot;,\n                &quot;currency&quot;: &quot;HKD&quot;,\n                &quot;details&quot;: {\n                    &quot;subtotal&quot;: &quot;6.00&quot;,\n                    &quot;tax&quot;: &quot;1.00&quot;,\n                    &quot;shipping&quot;: &quot;1.00&quot;\n                }\n            },\n            &quot;description&quot;: &quot;This is payment description.&quot;,\n            &quot;item_list&quot;: { \n                &quot;items&quot;:[\n                {\n                    &quot;quantity&quot;:&quot;3&quot;, \n                    &quot;name&quot;:&quot;Hat&quot;, \n                    &quot;price&quot;:&quot;2.00&quot;,  \n                    &quot;sku&quot;:&quot;product12345&quot;, \n                    &quot;currency&quot;:&quot;HKD&quot;\n                }\n                ]\n            }\n        }\n        ]\n    }&apos;;\n\n\n    $ch = curl_init();\n\n    curl_setopt($ch, CURLOPT_URL, &quot;https://api.sandbox.paypal.com/v1/payments/payment&quot;);\n    curl_setopt($ch, CURLOPT_HEADER, false);\n    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST,0);\n    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER,0);\n    curl_setopt($ch, CURLOPT_POST, true);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); \n    curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n        &apos;Authorization: Bearer &apos;.$token,\n        &apos;Accept: application/json&apos;,\n        &apos;Content-Type: application/json&apos;\n        ));\n    curl_setopt($ch, CURLOPT_POSTFIELDS, $payment_json);\n    curl_setopt($ch, CURLOPT_SSLVERSION, 6);\n\n    $result = curl_exec($ch);\n    curl_close($ch);\n\n    $array = json_decode($result);\n    // var_dump($array);\n    $redirect_urls = $array-&gt;links[&apos;1&apos;]-&gt;href;\n    header(&quot;location: &quot;.$redirect_urls); \n\n}\n</code></pre><p>裡面的 </p>\n<pre><code>$token = $this-&gt;gettoken();\n</code></pre><p>就是用了上面的 get token 方法取的那個token </p>\n<p>其中 </p>\n<pre><code>$redirect_urls = $array-&gt;links[&apos;1&apos;]-&gt;href;\n</code></pre><p>這裡會因為創建這個payment 之後 paypal 會 return 一串 json 來， 其中包括大概這樣子的東西： </p>\n<pre><code>&quot;links&quot;:[\n{\n  &quot;href&quot;:&quot;https://api.sandbox.paypal.com/v1/payments/payment/PAY-6RV70583SB702805EKEYSZ6Y&quot;,\n  &quot;rel&quot;:&quot;self&quot;,\n  &quot;method&quot;:&quot;GET&quot;\n},\n{\n  &quot;href&quot;:&quot;https://www.sandbox.paypal.com/webscr?cmd=_express-checkout&amp;token=EC-60U79048BN7719609&quot;,\n  &quot;rel&quot;:&quot;approval_url&quot;,\n  &quot;method&quot;:&quot;REDIRECT&quot;\n},\n{\n  &quot;href&quot;:&quot;https://api.sandbox.paypal.com/v1/payments/payment/PAY-6RV70583SB702805EKEYSZ6Y/execute&quot;,\n  &quot;rel&quot;:&quot;execute&quot;,\n  &quot;method&quot;:&quot;POST&quot;\n}\n  ]\n</code></pre><p>一個 “link” 的array. 我們要的就是中間的  <a href=\"https://www.sandbox.paypal.com/webscr?cmd=_express-checkout&amp;token=EC-60U79048BN7719609\" target=\"_blank\" rel=\"external\">https://www.sandbox.paypal.com/webscr?cmd=_express-checkout&amp;token=EC-60U79048BN7719609</a><br>然後我們用 </p>\n<pre><code>header(&quot;location: &quot;.$redirect_urls); \n</code></pre><p>跳到這里，這時候其實就去了付款的頁面了. </p>\n<h4 id=\"我寫這篇文章的時候，paypal正在換付款的layout，所以有些人看到會是新的界面，有些人看到舊的界面。這個是要看臉的\"><a href=\"#我寫這篇文章的時候，paypal正在換付款的layout，所以有些人看到會是新的界面，有些人看到舊的界面。這個是要看臉的\" class=\"headerlink\" title=\"(我寫這篇文章的時候，paypal正在換付款的layout，所以有些人看到會是新的界面，有些人看到舊的界面。這個是要看臉的)\"></a><span style=\"color:#83adef\">(我寫這篇文章的時候，paypal正在換付款的layout，所以有些人看到會是新的界面，有些人看到舊的界面。這個是要看臉的)</span></h4><p>在付款的頁面, 買家就會付款購買，然後會跳轉會你之前set的那個return_url里的link,<br>當然如果買家不買了cancel了,就會跳轉到cancel_url的link里。</p>\n<!-- ![GitHub Logo](/images/1.png) -->\n<h3 id=\"NVP-API\"><a href=\"#NVP-API\" class=\"headerlink\" title=\"NVP API :\"></a>NVP API :</h3><p>nvp api 需要用到 username , password , 和 signature<br>這三個東西在這裡搞<br><a href=\"https://developer.paypal.com/docs/classic/api/apiCredentials/\" target=\"_blank\" rel=\"external\">https://developer.paypal.com/docs/classic/api/apiCredentials/</a> </p>\n<pre><code>public function nvp_api($amount,$custom)\n{\n    $nvp = array(\n            &apos;LOCALECODE&apos;                        =&gt; &apos;zh_HK&apos;,\n            &apos;PAYMENTREQUEST_0_PAYMENTACTION&apos;    =&gt; &apos;Sale&apos;,\n            &apos;PAYMENTREQUEST_0_AMT&apos;              =&gt; $amount,\n            &apos;PAYMENTREQUEST_0_CURRENCYCODE&apos;     =&gt; &apos;HKD&apos;, \n            &apos;PAYMENTREQUEST_0_ITEMAMT&apos;          =&gt; $amount,\n            &apos;PAYMENTREQUEST_0_CUSTOM&apos;            =&gt; $custom,\n            &apos;L_PAYMENTREQUEST_0_NAME0&apos;          =&gt; &apos;payment name here&apos;,\n            &apos;L_PAYMENTREQUEST_0_DESC0&apos;          =&gt; &apos;payment description here&apos;,\n            &apos;L_PAYMENTREQUEST_0_AMT0&apos;           =&gt; $amount,\n\n            &apos;RETURNURL&apos;                         =&gt; return url here,\n            &apos;CANCELURL&apos;                =&gt; cancel url here,\n            &apos;METHOD&apos;                =&gt; &apos;SetExpressCheckout&apos;,\n            &apos;VERSION&apos;                =&gt; &apos;124&apos;,\n            &apos;PAYMENTREQUEST_0_SHIPTOSTATE&apos;      =&gt; &apos;1&apos;, \n            &apos;PWD&apos;                =&gt; &apos;your password&apos;,\n            &apos;USER&apos;                =&gt; &apos;your user&apos;,\n            &apos;SIGNATURE&apos;            =&gt; &apos;your signature&apos; \n    );\n\n        $curl = curl_init();\n        curl_setopt( $curl , CURLOPT_URL , &apos;https://api-3t.sandbox.paypal.com/nvp&apos; );\n        curl_setopt( $curl , CURLOPT_SSL_VERIFYPEER , false );\n        curl_setopt($curl, CURLOPT_SSLVERSION, 6);\n        curl_setopt( $curl , CURLOPT_RETURNTRANSFER , 1 );\n        curl_setopt( $curl , CURLOPT_POST , 1 );\n        curl_setopt( $curl , CURLOPT_POSTFIELDS , http_build_query( $nvp ) );\n        $response = urldecode( curl_exec( $curl ) );\n        curl_close( $curl );\n        $responseNvp = array();\n        if ( preg_match_all( &apos;/(?&lt;name&gt;[^\\=]+)\\=(?&lt;value&gt;[^&amp;]+)&amp;?/&apos; , $response , $matches ) ) {\n            foreach ( $matches[ &apos;name&apos; ] as $offset =&gt; $name ) {\n                $responseNvp[ $name ] = $matches[ &apos;value&apos; ][ $offset ];\n            }\n        }\n\n        if ( isset( $responseNvp[ &apos;ACK&apos; ] ) &amp;&amp; $responseNvp[ &apos;ACK&apos; ] == &apos;Success&apos; ) {\n            $paypalURL = &apos;https://www.sandbox.paypal.com/br/cgi-bin/webscr&apos;;\n            $query = array(\n                &apos;cmd&apos;    =&gt; &apos;_express-checkout&apos;,\n                &apos;useraction&apos; =&gt; &apos;commit&apos;, \n                &apos;token&apos;    =&gt; $responseNvp[ &apos;TOKEN&apos; ]\n            );\n\n              $paypal_link  =  $paypalURL . &apos;?&apos; . http_build_query( $query );\n\n        } \n\n\n        header(&quot;location: &quot;.$paypal_link);\n\n}\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"這裡記錄一下-paypal-的-API-讓以後需要用到的時候可以查到。\"><a href=\"#這裡記錄一下-paypal-的-API-讓以後需要用到的時候可以查到。\" class=\"headerlink\" title=\"這裡記錄一下 paypal 的 API, 讓以後需要用到的時候可以查到。\"></a>這裡記錄一下 paypal 的 API, 讓以後需要用到的時候可以查到。</h2><h4 id=\"因為我寫這篇blog的時候已經距離研究這個api的時候有一段日子了，所以我不一定下面的做法都是對的\"><a href=\"#因為我寫這篇blog的時候已經距離研究這個api的時候有一段日子了，所以我不一定下面的做法都是對的\" class=\"headerlink\" title=\"(因為我寫這篇blog的時候已經距離研究這個api的時候有一段日子了，所以我不一定下面的做法都是對的)\"></a><span style=\"color:#83adef\">(因為我寫這篇blog的時候已經距離研究這個api的時候有一段日子了，所以我不一定下面的做法都是對的)</span></h4><p>paypal 有3種比較常用的api 方法 </p>\n<ul>\n<li><strong>REST Api</strong></li>\n<li><strong>NVP Api</strong></li>\n<li><strong>HTML</strong></li>\n</ul>\n<hr>\n<h3 id=\"REST\"><a href=\"#REST\" class=\"headerlink\" title=\"REST :\"></a>REST :</h3><p>這裡先說流程</p>\n<p>代碼最重要:</p>\n<p><em>這是取得token的方法</em></p>\n<pre><code>public function gettoken()\n{\n\n\n    $ch = curl_init();\n    $clientId = &quot;your client id&quot;;\n    $secret = &quot;your secret&quot;;\n\n    curl_setopt($ch, CURLOPT_URL, &quot;https://api.sandbox.paypal.com/v1/oauth2/token&quot;);\n    curl_setopt($ch, CURLOPT_HEADER, false);\n    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST,0);\n    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER,0);\n    curl_setopt($ch, CURLOPT_POST, true);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); \n    curl_setopt($ch, CURLOPT_USERPWD, $clientId.&quot;:&quot;.$secret);\n    curl_setopt($ch, CURLOPT_POSTFIELDS, &quot;grant_type=client_credentials&quot;);\n    curl_setopt($ch, CURLOPT_SSLVERSION, 6);\n\n    $result = curl_exec($ch);\n\n    if(empty($result))die(curl_error($ch));\n    else\n    {\n        $json = json_decode($result);\n\n        $return  =  $json-&gt;access_token;\n    }\n\n    curl_close($ch);\n    return $return;\n\n}\n</code></pre><hr>\n<p><em>拿到token后就可以創建一個payment</em></p>\n<pre><code>public function rest_api(){\n    $token = $this-&gt;gettoken();\n    $payment_json = &apos;{\n        &quot;intent&quot;: &quot;sale&quot;,\n        &quot;payer&quot;: {\n            &quot;payment_method&quot;: &quot;paypal&quot;\n        },\n        &quot;redirect_urls&quot;: {\n            &quot;return_url&quot;: &quot;http://return_URL_here&quot;,\n            &quot;cancel_url&quot;: &quot;http://cancel_URL_here&quot;\n        },\n        &quot;transactions&quot;: [\n        {\n            &quot;amount&quot;: {\n                &quot;total&quot;: &quot;8.00&quot;,\n                &quot;currency&quot;: &quot;HKD&quot;,\n                &quot;details&quot;: {\n                    &quot;subtotal&quot;: &quot;6.00&quot;,\n                    &quot;tax&quot;: &quot;1.00&quot;,\n                    &quot;shipping&quot;: &quot;1.00&quot;\n                }\n            },\n            &quot;description&quot;: &quot;This is payment description.&quot;,\n            &quot;item_list&quot;: { \n                &quot;items&quot;:[\n                {\n                    &quot;quantity&quot;:&quot;3&quot;, \n                    &quot;name&quot;:&quot;Hat&quot;, \n                    &quot;price&quot;:&quot;2.00&quot;,  \n                    &quot;sku&quot;:&quot;product12345&quot;, \n                    &quot;currency&quot;:&quot;HKD&quot;\n                }\n                ]\n            }\n        }\n        ]\n    }&apos;;\n\n\n    $ch = curl_init();\n\n    curl_setopt($ch, CURLOPT_URL, &quot;https://api.sandbox.paypal.com/v1/payments/payment&quot;);\n    curl_setopt($ch, CURLOPT_HEADER, false);\n    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST,0);\n    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER,0);\n    curl_setopt($ch, CURLOPT_POST, true);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); \n    curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n        &apos;Authorization: Bearer &apos;.$token,\n        &apos;Accept: application/json&apos;,\n        &apos;Content-Type: application/json&apos;\n        ));\n    curl_setopt($ch, CURLOPT_POSTFIELDS, $payment_json);\n    curl_setopt($ch, CURLOPT_SSLVERSION, 6);\n\n    $result = curl_exec($ch);\n    curl_close($ch);\n\n    $array = json_decode($result);\n    // var_dump($array);\n    $redirect_urls = $array-&gt;links[&apos;1&apos;]-&gt;href;\n    header(&quot;location: &quot;.$redirect_urls); \n\n}\n</code></pre><p>裡面的 </p>\n<pre><code>$token = $this-&gt;gettoken();\n</code></pre><p>就是用了上面的 get token 方法取的那個token </p>\n<p>其中 </p>\n<pre><code>$redirect_urls = $array-&gt;links[&apos;1&apos;]-&gt;href;\n</code></pre><p>這裡會因為創建這個payment 之後 paypal 會 return 一串 json 來， 其中包括大概這樣子的東西： </p>\n<pre><code>&quot;links&quot;:[\n{\n  &quot;href&quot;:&quot;https://api.sandbox.paypal.com/v1/payments/payment/PAY-6RV70583SB702805EKEYSZ6Y&quot;,\n  &quot;rel&quot;:&quot;self&quot;,\n  &quot;method&quot;:&quot;GET&quot;\n},\n{\n  &quot;href&quot;:&quot;https://www.sandbox.paypal.com/webscr?cmd=_express-checkout&amp;token=EC-60U79048BN7719609&quot;,\n  &quot;rel&quot;:&quot;approval_url&quot;,\n  &quot;method&quot;:&quot;REDIRECT&quot;\n},\n{\n  &quot;href&quot;:&quot;https://api.sandbox.paypal.com/v1/payments/payment/PAY-6RV70583SB702805EKEYSZ6Y/execute&quot;,\n  &quot;rel&quot;:&quot;execute&quot;,\n  &quot;method&quot;:&quot;POST&quot;\n}\n  ]\n</code></pre><p>一個 “link” 的array. 我們要的就是中間的  <a href=\"https://www.sandbox.paypal.com/webscr?cmd=_express-checkout&amp;token=EC-60U79048BN7719609\" target=\"_blank\" rel=\"external\">https://www.sandbox.paypal.com/webscr?cmd=_express-checkout&amp;token=EC-60U79048BN7719609</a><br>然後我們用 </p>\n<pre><code>header(&quot;location: &quot;.$redirect_urls); \n</code></pre><p>跳到這里，這時候其實就去了付款的頁面了. </p>\n<h4 id=\"我寫這篇文章的時候，paypal正在換付款的layout，所以有些人看到會是新的界面，有些人看到舊的界面。這個是要看臉的\"><a href=\"#我寫這篇文章的時候，paypal正在換付款的layout，所以有些人看到會是新的界面，有些人看到舊的界面。這個是要看臉的\" class=\"headerlink\" title=\"(我寫這篇文章的時候，paypal正在換付款的layout，所以有些人看到會是新的界面，有些人看到舊的界面。這個是要看臉的)\"></a><span style=\"color:#83adef\">(我寫這篇文章的時候，paypal正在換付款的layout，所以有些人看到會是新的界面，有些人看到舊的界面。這個是要看臉的)</span></h4><p>在付款的頁面, 買家就會付款購買，然後會跳轉會你之前set的那個return_url里的link,<br>當然如果買家不買了cancel了,就會跳轉到cancel_url的link里。</p>\n<!-- ![GitHub Logo](/images/1.png) -->\n<h3 id=\"NVP-API\"><a href=\"#NVP-API\" class=\"headerlink\" title=\"NVP API :\"></a>NVP API :</h3><p>nvp api 需要用到 username , password , 和 signature<br>這三個東西在這裡搞<br><a href=\"https://developer.paypal.com/docs/classic/api/apiCredentials/\" target=\"_blank\" rel=\"external\">https://developer.paypal.com/docs/classic/api/apiCredentials/</a> </p>\n<pre><code>public function nvp_api($amount,$custom)\n{\n    $nvp = array(\n            &apos;LOCALECODE&apos;                        =&gt; &apos;zh_HK&apos;,\n            &apos;PAYMENTREQUEST_0_PAYMENTACTION&apos;    =&gt; &apos;Sale&apos;,\n            &apos;PAYMENTREQUEST_0_AMT&apos;              =&gt; $amount,\n            &apos;PAYMENTREQUEST_0_CURRENCYCODE&apos;     =&gt; &apos;HKD&apos;, \n            &apos;PAYMENTREQUEST_0_ITEMAMT&apos;          =&gt; $amount,\n            &apos;PAYMENTREQUEST_0_CUSTOM&apos;            =&gt; $custom,\n            &apos;L_PAYMENTREQUEST_0_NAME0&apos;          =&gt; &apos;payment name here&apos;,\n            &apos;L_PAYMENTREQUEST_0_DESC0&apos;          =&gt; &apos;payment description here&apos;,\n            &apos;L_PAYMENTREQUEST_0_AMT0&apos;           =&gt; $amount,\n\n            &apos;RETURNURL&apos;                         =&gt; return url here,\n            &apos;CANCELURL&apos;                =&gt; cancel url here,\n            &apos;METHOD&apos;                =&gt; &apos;SetExpressCheckout&apos;,\n            &apos;VERSION&apos;                =&gt; &apos;124&apos;,\n            &apos;PAYMENTREQUEST_0_SHIPTOSTATE&apos;      =&gt; &apos;1&apos;, \n            &apos;PWD&apos;                =&gt; &apos;your password&apos;,\n            &apos;USER&apos;                =&gt; &apos;your user&apos;,\n            &apos;SIGNATURE&apos;            =&gt; &apos;your signature&apos; \n    );\n\n        $curl = curl_init();\n        curl_setopt( $curl , CURLOPT_URL , &apos;https://api-3t.sandbox.paypal.com/nvp&apos; );\n        curl_setopt( $curl , CURLOPT_SSL_VERIFYPEER , false );\n        curl_setopt($curl, CURLOPT_SSLVERSION, 6);\n        curl_setopt( $curl , CURLOPT_RETURNTRANSFER , 1 );\n        curl_setopt( $curl , CURLOPT_POST , 1 );\n        curl_setopt( $curl , CURLOPT_POSTFIELDS , http_build_query( $nvp ) );\n        $response = urldecode( curl_exec( $curl ) );\n        curl_close( $curl );\n        $responseNvp = array();\n        if ( preg_match_all( &apos;/(?&lt;name&gt;[^\\=]+)\\=(?&lt;value&gt;[^&amp;]+)&amp;?/&apos; , $response , $matches ) ) {\n            foreach ( $matches[ &apos;name&apos; ] as $offset =&gt; $name ) {\n                $responseNvp[ $name ] = $matches[ &apos;value&apos; ][ $offset ];\n            }\n        }\n\n        if ( isset( $responseNvp[ &apos;ACK&apos; ] ) &amp;&amp; $responseNvp[ &apos;ACK&apos; ] == &apos;Success&apos; ) {\n            $paypalURL = &apos;https://www.sandbox.paypal.com/br/cgi-bin/webscr&apos;;\n            $query = array(\n                &apos;cmd&apos;    =&gt; &apos;_express-checkout&apos;,\n                &apos;useraction&apos; =&gt; &apos;commit&apos;, \n                &apos;token&apos;    =&gt; $responseNvp[ &apos;TOKEN&apos; ]\n            );\n\n              $paypal_link  =  $paypalURL . &apos;?&apos; . http_build_query( $query );\n\n        } \n\n\n        header(&quot;location: &quot;.$paypal_link);\n\n}\n</code></pre>"},{"title":"$_SERVER 的常用list","_content":"\n## $_SERVER 的list \n記錄一下，不用每一次都上網查， 個人感覺頭幾個比較常用\n\t\t\n\t\t$_SERVER['REQUEST_URI'] #訪問此頁面所需的 URI。例如，「/index.html」。 \n\t\t$_SERVER['PHP_SELF'] #當前正在執行腳本的文件名，與 document root相關。\n\t\t$_SERVER['HTTP_HOST'] #當前請求的 Host: 頭部的內容。 \n\t\t$_SERVER['SERVER_NAME'] #當前運行腳本所在服務器主機的名稱。 \n\t\t$_SERVER['HTTP_REFERER'] #鏈接到當前頁面的前一頁面的 URL 地址。 \n\t\t$_SERVER['REMOTE_ADDR'] #正在瀏覽當前頁面用戶的 IP 地址。 \n\n\t\t$_SERVER['SCRIPT_NAME'] #包含當前腳本的路徑。這在頁面需要指向自己時非常有用。 \t\t\n\t\t$_SERVER['SERVER_SOFTWARE'] #服務器標識的字串，在響應請求時的頭部中給出。 \n\t\t$_SERVER['SERVER_PROTOCOL'] #請求頁面時通信協議的名稱和版本。例如，「HTTP/1.0」。 \n\t\t$_SERVER['REQUEST_METHOD'] #訪問頁面時的請求方法。例如：「GET」、「HEAD」，「POST」，「PUT」。 \n\t\t$_SERVER['QUERY_STRING'] #查詢(query)的字符串。 \n\t\t$_SERVER['DOCUMENT_ROOT'] #當前運行腳本所在的文檔根目錄。在服務器配置文件中定義。\n\t\t$_SERVER['HTTP_ACCEPT'] #當前請求的 Accept: 頭部的內容。 \n\t\t$_SERVER['HTTP_ACCEPT_CHARSET'] #當前請求的 Accept-Charset: 頭部的內容。例如：「iso-8859-1,*,utf-8」。\n\t\t$_SERVER['HTTP_ACCEPT_ENCODING'] #當前請求的 Accept-Encoding: 頭部的內容。例如：「gzip」。\n\t\t$_SERVER['HTTP_ACCEPT_LANGUAGE']#當前請求的 Accept-Language: 頭部的內容。例如：「en」。\n\t\t$_SERVER['HTTP_CONNECTION'] #當前請求的 Connection: 頭部的內容。例如：「Keep-Alive」。 \n\t\t$_SERVER['HTTP_USER_AGENT'] #當前請求的 User_Agent: 頭部的內容。 \n\t\t$_SERVER['REMOTE_HOST'] #正在瀏覽當前頁面用戶的主機名。 \n\t\t$_SERVER['REMOTE_PORT'] #用戶連接到服務器時所使用的端口。 \n\t\t$_SERVER['SCRIPT_FILENAME'] #當前執行腳本的絕對路徑名。 \n\t\t$_SERVER['SERVER_ADMIN'] #管理員信息 \n\t\t$_SERVER['SERVER_PORT'] #服務器所使用的端口 \n\t\t$_SERVER['SERVER_SIGNATURE'] #包含服務器版本和虛擬主機名的字符串。 \n\t\t$_SERVER['PATH_TRANSLATED'] #當前腳本所在文件系統（不是文檔根目錄）的基本路徑。 \n\t\t$_SERVER['PHP_AUTH_USER'] #當 PHP 運行在 Apache 模塊方式下，並且正在使用 HTTP 認證功能，這個變量便是用戶輸入的用戶名。 \n\t\t$_SERVER['PHP_AUTH_PW'] #當 PHP 運行在 Apache 模塊方式下，並且正在使用 HTTP 認證功能，這個變量便是用戶輸入的密碼。 \n\t\t$_SERVER['AUTH_TYPE'] #當 PHP 運行在 Apache 模塊方式下，並且正在使用 HTTP 認證功能，這個變量便是認證的類型。\n\t\t$_SERVER['argv'] #傳遞給該腳本的參數。 \n\t\t$_SERVER['argc'] #包含傳遞給程序的命令行參數的個數（如果運行在命令行模式）。 \n\t\t$_SERVER['GATEWAY_INTERFACE'] #服務器使用的 CGI 規範的版本。例如，「CGI/1.1」。","source":"_drafts/php-server.md","raw":"---\ntitle: $_SERVER 的常用list \ntags: php \n---\n\n## $_SERVER 的list \n記錄一下，不用每一次都上網查， 個人感覺頭幾個比較常用\n\t\t\n\t\t$_SERVER['REQUEST_URI'] #訪問此頁面所需的 URI。例如，「/index.html」。 \n\t\t$_SERVER['PHP_SELF'] #當前正在執行腳本的文件名，與 document root相關。\n\t\t$_SERVER['HTTP_HOST'] #當前請求的 Host: 頭部的內容。 \n\t\t$_SERVER['SERVER_NAME'] #當前運行腳本所在服務器主機的名稱。 \n\t\t$_SERVER['HTTP_REFERER'] #鏈接到當前頁面的前一頁面的 URL 地址。 \n\t\t$_SERVER['REMOTE_ADDR'] #正在瀏覽當前頁面用戶的 IP 地址。 \n\n\t\t$_SERVER['SCRIPT_NAME'] #包含當前腳本的路徑。這在頁面需要指向自己時非常有用。 \t\t\n\t\t$_SERVER['SERVER_SOFTWARE'] #服務器標識的字串，在響應請求時的頭部中給出。 \n\t\t$_SERVER['SERVER_PROTOCOL'] #請求頁面時通信協議的名稱和版本。例如，「HTTP/1.0」。 \n\t\t$_SERVER['REQUEST_METHOD'] #訪問頁面時的請求方法。例如：「GET」、「HEAD」，「POST」，「PUT」。 \n\t\t$_SERVER['QUERY_STRING'] #查詢(query)的字符串。 \n\t\t$_SERVER['DOCUMENT_ROOT'] #當前運行腳本所在的文檔根目錄。在服務器配置文件中定義。\n\t\t$_SERVER['HTTP_ACCEPT'] #當前請求的 Accept: 頭部的內容。 \n\t\t$_SERVER['HTTP_ACCEPT_CHARSET'] #當前請求的 Accept-Charset: 頭部的內容。例如：「iso-8859-1,*,utf-8」。\n\t\t$_SERVER['HTTP_ACCEPT_ENCODING'] #當前請求的 Accept-Encoding: 頭部的內容。例如：「gzip」。\n\t\t$_SERVER['HTTP_ACCEPT_LANGUAGE']#當前請求的 Accept-Language: 頭部的內容。例如：「en」。\n\t\t$_SERVER['HTTP_CONNECTION'] #當前請求的 Connection: 頭部的內容。例如：「Keep-Alive」。 \n\t\t$_SERVER['HTTP_USER_AGENT'] #當前請求的 User_Agent: 頭部的內容。 \n\t\t$_SERVER['REMOTE_HOST'] #正在瀏覽當前頁面用戶的主機名。 \n\t\t$_SERVER['REMOTE_PORT'] #用戶連接到服務器時所使用的端口。 \n\t\t$_SERVER['SCRIPT_FILENAME'] #當前執行腳本的絕對路徑名。 \n\t\t$_SERVER['SERVER_ADMIN'] #管理員信息 \n\t\t$_SERVER['SERVER_PORT'] #服務器所使用的端口 \n\t\t$_SERVER['SERVER_SIGNATURE'] #包含服務器版本和虛擬主機名的字符串。 \n\t\t$_SERVER['PATH_TRANSLATED'] #當前腳本所在文件系統（不是文檔根目錄）的基本路徑。 \n\t\t$_SERVER['PHP_AUTH_USER'] #當 PHP 運行在 Apache 模塊方式下，並且正在使用 HTTP 認證功能，這個變量便是用戶輸入的用戶名。 \n\t\t$_SERVER['PHP_AUTH_PW'] #當 PHP 運行在 Apache 模塊方式下，並且正在使用 HTTP 認證功能，這個變量便是用戶輸入的密碼。 \n\t\t$_SERVER['AUTH_TYPE'] #當 PHP 運行在 Apache 模塊方式下，並且正在使用 HTTP 認證功能，這個變量便是認證的類型。\n\t\t$_SERVER['argv'] #傳遞給該腳本的參數。 \n\t\t$_SERVER['argc'] #包含傳遞給程序的命令行參數的個數（如果運行在命令行模式）。 \n\t\t$_SERVER['GATEWAY_INTERFACE'] #服務器使用的 CGI 規範的版本。例如，「CGI/1.1」。","slug":"php-server","published":0,"date":"2017-05-26T04:13:27.000Z","updated":"2017-05-26T04:13:27.000Z","_id":"cj35c1ugb000iaf7x4h6aypcf","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"SERVER-的list\"><a href=\"#SERVER-的list\" class=\"headerlink\" title=\"$_SERVER 的list\"></a>$_SERVER 的list</h2><p>記錄一下，不用每一次都上網查， 個人感覺頭幾個比較常用</p>\n<pre><code>$_SERVER[&apos;REQUEST_URI&apos;] #訪問此頁面所需的 URI。例如，「/index.html」。 \n$_SERVER[&apos;PHP_SELF&apos;] #當前正在執行腳本的文件名，與 document root相關。\n$_SERVER[&apos;HTTP_HOST&apos;] #當前請求的 Host: 頭部的內容。 \n$_SERVER[&apos;SERVER_NAME&apos;] #當前運行腳本所在服務器主機的名稱。 \n$_SERVER[&apos;HTTP_REFERER&apos;] #鏈接到當前頁面的前一頁面的 URL 地址。 \n$_SERVER[&apos;REMOTE_ADDR&apos;] #正在瀏覽當前頁面用戶的 IP 地址。 \n\n$_SERVER[&apos;SCRIPT_NAME&apos;] #包含當前腳本的路徑。這在頁面需要指向自己時非常有用。         \n$_SERVER[&apos;SERVER_SOFTWARE&apos;] #服務器標識的字串，在響應請求時的頭部中給出。 \n$_SERVER[&apos;SERVER_PROTOCOL&apos;] #請求頁面時通信協議的名稱和版本。例如，「HTTP/1.0」。 \n$_SERVER[&apos;REQUEST_METHOD&apos;] #訪問頁面時的請求方法。例如：「GET」、「HEAD」，「POST」，「PUT」。 \n$_SERVER[&apos;QUERY_STRING&apos;] #查詢(query)的字符串。 \n$_SERVER[&apos;DOCUMENT_ROOT&apos;] #當前運行腳本所在的文檔根目錄。在服務器配置文件中定義。\n$_SERVER[&apos;HTTP_ACCEPT&apos;] #當前請求的 Accept: 頭部的內容。 \n$_SERVER[&apos;HTTP_ACCEPT_CHARSET&apos;] #當前請求的 Accept-Charset: 頭部的內容。例如：「iso-8859-1,*,utf-8」。\n$_SERVER[&apos;HTTP_ACCEPT_ENCODING&apos;] #當前請求的 Accept-Encoding: 頭部的內容。例如：「gzip」。\n$_SERVER[&apos;HTTP_ACCEPT_LANGUAGE&apos;]#當前請求的 Accept-Language: 頭部的內容。例如：「en」。\n$_SERVER[&apos;HTTP_CONNECTION&apos;] #當前請求的 Connection: 頭部的內容。例如：「Keep-Alive」。 \n$_SERVER[&apos;HTTP_USER_AGENT&apos;] #當前請求的 User_Agent: 頭部的內容。 \n$_SERVER[&apos;REMOTE_HOST&apos;] #正在瀏覽當前頁面用戶的主機名。 \n$_SERVER[&apos;REMOTE_PORT&apos;] #用戶連接到服務器時所使用的端口。 \n$_SERVER[&apos;SCRIPT_FILENAME&apos;] #當前執行腳本的絕對路徑名。 \n$_SERVER[&apos;SERVER_ADMIN&apos;] #管理員信息 \n$_SERVER[&apos;SERVER_PORT&apos;] #服務器所使用的端口 \n$_SERVER[&apos;SERVER_SIGNATURE&apos;] #包含服務器版本和虛擬主機名的字符串。 \n$_SERVER[&apos;PATH_TRANSLATED&apos;] #當前腳本所在文件系統（不是文檔根目錄）的基本路徑。 \n$_SERVER[&apos;PHP_AUTH_USER&apos;] #當 PHP 運行在 Apache 模塊方式下，並且正在使用 HTTP 認證功能，這個變量便是用戶輸入的用戶名。 \n$_SERVER[&apos;PHP_AUTH_PW&apos;] #當 PHP 運行在 Apache 模塊方式下，並且正在使用 HTTP 認證功能，這個變量便是用戶輸入的密碼。 \n$_SERVER[&apos;AUTH_TYPE&apos;] #當 PHP 運行在 Apache 模塊方式下，並且正在使用 HTTP 認證功能，這個變量便是認證的類型。\n$_SERVER[&apos;argv&apos;] #傳遞給該腳本的參數。 \n$_SERVER[&apos;argc&apos;] #包含傳遞給程序的命令行參數的個數（如果運行在命令行模式）。 \n$_SERVER[&apos;GATEWAY_INTERFACE&apos;] #服務器使用的 CGI 規範的版本。例如，「CGI/1.1」。\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"SERVER-的list\"><a href=\"#SERVER-的list\" class=\"headerlink\" title=\"$_SERVER 的list\"></a>$_SERVER 的list</h2><p>記錄一下，不用每一次都上網查， 個人感覺頭幾個比較常用</p>\n<pre><code>$_SERVER[&apos;REQUEST_URI&apos;] #訪問此頁面所需的 URI。例如，「/index.html」。 \n$_SERVER[&apos;PHP_SELF&apos;] #當前正在執行腳本的文件名，與 document root相關。\n$_SERVER[&apos;HTTP_HOST&apos;] #當前請求的 Host: 頭部的內容。 \n$_SERVER[&apos;SERVER_NAME&apos;] #當前運行腳本所在服務器主機的名稱。 \n$_SERVER[&apos;HTTP_REFERER&apos;] #鏈接到當前頁面的前一頁面的 URL 地址。 \n$_SERVER[&apos;REMOTE_ADDR&apos;] #正在瀏覽當前頁面用戶的 IP 地址。 \n\n$_SERVER[&apos;SCRIPT_NAME&apos;] #包含當前腳本的路徑。這在頁面需要指向自己時非常有用。         \n$_SERVER[&apos;SERVER_SOFTWARE&apos;] #服務器標識的字串，在響應請求時的頭部中給出。 \n$_SERVER[&apos;SERVER_PROTOCOL&apos;] #請求頁面時通信協議的名稱和版本。例如，「HTTP/1.0」。 \n$_SERVER[&apos;REQUEST_METHOD&apos;] #訪問頁面時的請求方法。例如：「GET」、「HEAD」，「POST」，「PUT」。 \n$_SERVER[&apos;QUERY_STRING&apos;] #查詢(query)的字符串。 \n$_SERVER[&apos;DOCUMENT_ROOT&apos;] #當前運行腳本所在的文檔根目錄。在服務器配置文件中定義。\n$_SERVER[&apos;HTTP_ACCEPT&apos;] #當前請求的 Accept: 頭部的內容。 \n$_SERVER[&apos;HTTP_ACCEPT_CHARSET&apos;] #當前請求的 Accept-Charset: 頭部的內容。例如：「iso-8859-1,*,utf-8」。\n$_SERVER[&apos;HTTP_ACCEPT_ENCODING&apos;] #當前請求的 Accept-Encoding: 頭部的內容。例如：「gzip」。\n$_SERVER[&apos;HTTP_ACCEPT_LANGUAGE&apos;]#當前請求的 Accept-Language: 頭部的內容。例如：「en」。\n$_SERVER[&apos;HTTP_CONNECTION&apos;] #當前請求的 Connection: 頭部的內容。例如：「Keep-Alive」。 \n$_SERVER[&apos;HTTP_USER_AGENT&apos;] #當前請求的 User_Agent: 頭部的內容。 \n$_SERVER[&apos;REMOTE_HOST&apos;] #正在瀏覽當前頁面用戶的主機名。 \n$_SERVER[&apos;REMOTE_PORT&apos;] #用戶連接到服務器時所使用的端口。 \n$_SERVER[&apos;SCRIPT_FILENAME&apos;] #當前執行腳本的絕對路徑名。 \n$_SERVER[&apos;SERVER_ADMIN&apos;] #管理員信息 \n$_SERVER[&apos;SERVER_PORT&apos;] #服務器所使用的端口 \n$_SERVER[&apos;SERVER_SIGNATURE&apos;] #包含服務器版本和虛擬主機名的字符串。 \n$_SERVER[&apos;PATH_TRANSLATED&apos;] #當前腳本所在文件系統（不是文檔根目錄）的基本路徑。 \n$_SERVER[&apos;PHP_AUTH_USER&apos;] #當 PHP 運行在 Apache 模塊方式下，並且正在使用 HTTP 認證功能，這個變量便是用戶輸入的用戶名。 \n$_SERVER[&apos;PHP_AUTH_PW&apos;] #當 PHP 運行在 Apache 模塊方式下，並且正在使用 HTTP 認證功能，這個變量便是用戶輸入的密碼。 \n$_SERVER[&apos;AUTH_TYPE&apos;] #當 PHP 運行在 Apache 模塊方式下，並且正在使用 HTTP 認證功能，這個變量便是認證的類型。\n$_SERVER[&apos;argv&apos;] #傳遞給該腳本的參數。 \n$_SERVER[&apos;argc&apos;] #包含傳遞給程序的命令行參數的個數（如果運行在命令行模式）。 \n$_SERVER[&apos;GATEWAY_INTERFACE&apos;] #服務器使用的 CGI 規範的版本。例如，「CGI/1.1」。\n</code></pre>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cj35c1ue50004af7xw347unuq","tag_id":"cj35c1uec0006af7x8pvdmows","_id":"cj35c1uei000aaf7x750brfu1"},{"post_id":"cj35c1ug0000faf7x5twhedew","tag_id":"cj35c1uec0006af7x8pvdmows","_id":"cj35c1ugb000haf7xkjn0gqti"},{"post_id":"cj35c1ufb000caf7xdh4rc6s0","tag_id":"cj35c1ug0000eaf7xhd2qcpds","_id":"cj35c1ugc000jaf7xv5aec2su"},{"post_id":"cj35c1ugb000iaf7x4h6aypcf","tag_id":"cj35c1ugc000kaf7x4bh1seg8","_id":"cj35c1ugc000laf7xc78xu1xk"}],"Tag":[{"name":"unity, C#","_id":"cj35c1uec0006af7x8pvdmows"},{"name":"phaser html5 canvas game","_id":"cj35c1ug0000eaf7xhd2qcpds"},{"name":"php","_id":"cj35c1ugc000kaf7x4bh1seg8"}]}}